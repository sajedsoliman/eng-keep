[{"F:\\Projects\\eng-keep\\src\\index.js":"1","F:\\Projects\\eng-keep\\src\\App.js":"2","F:\\Projects\\eng-keep\\src\\redux\\store.js":"3","F:\\Projects\\eng-keep\\src\\contexts\\UserContext.js":"4","F:\\Projects\\eng-keep\\src\\contexts\\NotificationContext.js":"5","F:\\Projects\\eng-keep\\src\\styles\\theme.js":"6","F:\\Projects\\eng-keep\\src\\components\\single-word\\SingleWord.js":"7","F:\\Projects\\eng-keep\\src\\components\\EngKeep.js":"8","F:\\Projects\\eng-keep\\src\\hooks\\useAlan.js":"9","F:\\Projects\\eng-keep\\src\\redux\\reducers\\globals.js":"10","F:\\Projects\\eng-keep\\src\\back-ends\\database.js":"11","F:\\Projects\\eng-keep\\src\\common-components\\ui\\NotificationSnackbar.js":"12","F:\\Projects\\eng-keep\\src\\components\\HomepageTabs.js":"13","F:\\Projects\\eng-keep\\src\\back-ends\\Store.js":"14","F:\\Projects\\eng-keep\\src\\components\\AppControls.js":"15","F:\\Projects\\eng-keep\\src\\common-components\\util\\IF.js":"16","F:\\Projects\\eng-keep\\src\\components\\word-list\\WordList.js":"17","F:\\Projects\\eng-keep\\src\\components\\word-list\\WordCard.js":"18","F:\\Projects\\eng-keep\\src\\common-components\\router\\UnAuthRoute.js":"19","F:\\Projects\\eng-keep\\src\\helpers\\info.js":"20","F:\\Projects\\eng-keep\\src\\components\\word-list\\SearchBar.js":"21","F:\\Projects\\eng-keep\\src\\helpers\\functions.js":"22","F:\\Projects\\eng-keep\\src\\components\\header\\Header.js":"23","F:\\Projects\\eng-keep\\src\\pages\\auth\\Register.js":"24","F:\\Projects\\eng-keep\\src\\pages\\auth\\Login.js":"25","F:\\Projects\\eng-keep\\src\\components\\PeriodMenu.js":"26","F:\\Projects\\eng-keep\\src\\back-ends\\HelperFunctions.js":"27","F:\\Projects\\eng-keep\\src\\forms\\LastRevisedWordFrom.js":"28","F:\\Projects\\eng-keep\\src\\components\\word-list\\WordCardHeader.js":"29","F:\\Projects\\eng-keep\\src\\components\\word-list\\WordExamples.js":"30","F:\\Projects\\eng-keep\\src\\components\\word-list\\WordSynonyms.js":"31","F:\\Projects\\eng-keep\\src\\components\\word-list\\WordControls.js":"32","F:\\Projects\\eng-keep\\src\\common-components\\controls\\Controls.js":"33","F:\\Projects\\eng-keep\\src\\forms\\UserForm.js":"34","F:\\Projects\\eng-keep\\src\\hooks\\useForm.js":"35","F:\\Projects\\eng-keep\\src\\common-components\\ui\\ConfirmPopUp.js":"36","F:\\Projects\\eng-keep\\src\\forms\\WordForm.js":"37","F:\\Projects\\eng-keep\\src\\common-components\\ui\\PopUp.js":"38","F:\\Projects\\eng-keep\\src\\common-components\\controls\\TextInput.js":"39","F:\\Projects\\eng-keep\\src\\common-components\\controls\\SelectBoxInput.js":"40","F:\\Projects\\eng-keep\\src\\common-components\\controls\\ReusableCheckBox.js":"41","F:\\Projects\\eng-keep\\src\\common-components\\controls\\RadioGroup.js":"42","F:\\Projects\\eng-keep\\src\\common-components\\controls\\FilePondCircular.js":"43","F:\\Projects\\eng-keep\\src\\common-components\\controls\\Toggler.tsx":"44","F:\\Projects\\eng-keep\\src\\common-components\\ui\\form-list\\FormList.js":"45","F:\\Projects\\eng-keep\\src\\common-components\\ui\\form-list\\ItemForm.js":"46","F:\\Projects\\eng-keep\\src\\common-components\\controls\\SpeechToText.js":"47","F:\\Projects\\eng-keep\\src\\common-components\\hooks\\useForm.js":"48","F:\\Projects\\eng-keep\\src\\common-components\\controls\\PasswordInput.js":"49","F:\\Projects\\eng-keep\\src\\common-components\\controls\\FilePondUploader.js":"50","F:\\Projects\\eng-keep\\src\\common-components\\controls\\TextArea.js":"51","F:\\Projects\\eng-keep\\src\\common-components\\controls\\SearchBox.js":"52","F:\\Projects\\eng-keep\\src\\common-components\\ui\\CustomMenuList.js":"53","F:\\Projects\\eng-keep\\src\\hooks\\useWindowWidth.js":"54","F:\\Projects\\eng-keep\\src\\components\\word-list\\WordSynonym.js":"55"},{"size":945,"mtime":1629691454750,"results":"56","hashOfConfig":"57"},{"size":1334,"mtime":1629691454736,"results":"58","hashOfConfig":"57"},{"size":227,"mtime":1629691454751,"results":"59","hashOfConfig":"57"},{"size":1095,"mtime":1629691454748,"results":"60","hashOfConfig":"57"},{"size":932,"mtime":1629691454747,"results":"61","hashOfConfig":"57"},{"size":171,"mtime":1629691454751,"results":"62","hashOfConfig":"57"},{"size":2148,"mtime":1629691454746,"results":"63","hashOfConfig":"57"},{"size":8611,"mtime":1629691454744,"results":"64","hashOfConfig":"57"},{"size":2494,"mtime":1629694365539,"results":"65","hashOfConfig":"57"},{"size":385,"mtime":1629691454751,"results":"66","hashOfConfig":"57"},{"size":655,"mtime":1629691454737,"results":"67","hashOfConfig":"57"},{"size":798,"mtime":1629691454742,"results":"68","hashOfConfig":"57"},{"size":2008,"mtime":1629691454744,"results":"69","hashOfConfig":"57"},{"size":7177,"mtime":1629697321267,"results":"70","hashOfConfig":"57"},{"size":3981,"mtime":1629691454743,"results":"71","hashOfConfig":"57"},{"size":132,"mtime":1629691454743,"results":"72","hashOfConfig":"57"},{"size":1615,"mtime":1629691454747,"results":"73","hashOfConfig":"57"},{"size":3024,"mtime":1629691454746,"results":"74","hashOfConfig":"57"},{"size":511,"mtime":1629691454741,"results":"75","hashOfConfig":"57"},{"size":1819,"mtime":1629691454749,"results":"76","hashOfConfig":"57"},{"size":1289,"mtime":1629691454746,"results":"77","hashOfConfig":"57"},{"size":3052,"mtime":1629694175391,"results":"78","hashOfConfig":"57"},{"size":2238,"mtime":1629691454745,"results":"79","hashOfConfig":"57"},{"size":1501,"mtime":1629691454750,"results":"80","hashOfConfig":"57"},{"size":1144,"mtime":1629691454750,"results":"81","hashOfConfig":"57"},{"size":2653,"mtime":1629691454744,"results":"82","hashOfConfig":"57"},{"size":3247,"mtime":1629697631272,"results":"83","hashOfConfig":"57"},{"size":1620,"mtime":1629691454748,"results":"84","hashOfConfig":"57"},{"size":1593,"mtime":1629691454746,"results":"85","hashOfConfig":"57"},{"size":1803,"mtime":1629691454747,"results":"86","hashOfConfig":"57"},{"size":1523,"mtime":1629699299296,"results":"87","hashOfConfig":"57"},{"size":2727,"mtime":1629691454746,"results":"88","hashOfConfig":"57"},{"size":648,"mtime":1629691454738,"results":"89","hashOfConfig":"57"},{"size":2060,"mtime":1629691454748,"results":"90","hashOfConfig":"57"},{"size":1378,"mtime":1629691454749,"results":"91","hashOfConfig":"57"},{"size":1710,"mtime":1629691454742,"results":"92","hashOfConfig":"57"},{"size":4824,"mtime":1629697307840,"results":"93","hashOfConfig":"57"},{"size":1759,"mtime":1629691454742,"results":"94","hashOfConfig":"57"},{"size":554,"mtime":1629691454740,"results":"95","hashOfConfig":"57"},{"size":789,"mtime":1629691454740,"results":"96","hashOfConfig":"57"},{"size":708,"mtime":1629691454739,"results":"97","hashOfConfig":"57"},{"size":921,"mtime":1629691454739,"results":"98","hashOfConfig":"57"},{"size":1478,"mtime":1629691454739,"results":"99","hashOfConfig":"57"},{"size":703,"mtime":1629691454740,"results":"100","hashOfConfig":"57"},{"size":2357,"mtime":1629691454743,"results":"101","hashOfConfig":"57"},{"size":2021,"mtime":1629691454743,"results":"102","hashOfConfig":"57"},{"size":1391,"mtime":1629691454740,"results":"103","hashOfConfig":"57"},{"size":1437,"mtime":1629691454741,"results":"104","hashOfConfig":"57"},{"size":1260,"mtime":1629691454739,"results":"105","hashOfConfig":"57"},{"size":1253,"mtime":1629691454739,"results":"106","hashOfConfig":"57"},{"size":684,"mtime":1629691454740,"results":"107","hashOfConfig":"57"},{"size":1216,"mtime":1629691454740,"results":"108","hashOfConfig":"57"},{"size":816,"mtime":1629691454742,"results":"109","hashOfConfig":"57"},{"size":656,"mtime":1629699500997,"results":"110","hashOfConfig":"57"},{"size":1243,"mtime":1629699289653,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"77a54e",{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"114"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Projects\\eng-keep\\src\\index.js",[],["247","248"],"F:\\Projects\\eng-keep\\src\\App.js",["249"],"// Hooks\r\nimport useAlan from \"./hooks/useAlan\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"./contexts/UserContext\";\r\n\r\n// Components\r\nimport EngKeep from \"./components/EngKeep\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SingleWord from \"./components/single-word/SingleWord\";\r\n\r\n// now i can use this site map in links\r\nexport const siteMap = {\r\n\tSingleWord: {\r\n\t\tpath: \"/words/:word\",\r\n\t\tdescription: \"The full word page that shows it fullscreen\",\r\n\t},\r\n\tHomePage: {\r\n\t\tpath: \"/\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"contains all words and tabs\",\r\n\t},\r\n\tNewWordsPage: {\r\n\t\tpath: \"/new-words\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"contains all words under the (new words) category\",\r\n\t},\r\n\tProperlyPronunciationWordsPage: {\r\n\t\tpath: \"/properly-pronunciation-words\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"contains all words under the (to-properly-pronunciation words) category\",\r\n\t},\r\n\tSignin: {\r\n\t\tpath: \"/signin\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"Login page\",\r\n\t},\r\n\tRegister: {\r\n\t\tpath: \"/register\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"register page\",\r\n\t},\r\n};\r\n\r\nfunction App() {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// inject useAlan\r\n\tuseAlan();\r\n\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/words/:word\">\r\n\t\t\t\t<SingleWord />\r\n\t\t\t</Route>\r\n\r\n\t\t\t<EngKeep />\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","F:\\Projects\\eng-keep\\src\\redux\\store.js",[],"F:\\Projects\\eng-keep\\src\\contexts\\UserContext.js",["250"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../back-ends/database\";\r\n\r\nconst AuthedUserContext = React.createContext();\r\n\r\n// custom hook to access the user\r\nexport function AuthedUser() {\r\n\tconst context = useContext(AuthedUserContext);\r\n\tif (context === null || context === undefined)\r\n\t\tthrow new Error(\"AuthedUser must be used within a AuthedUserProvider\");\r\n\r\n\treturn context;\r\n}\r\n\r\nexport function AuthedUserProvider({ children }) {\r\n\tconst [authUser, setAuthUser] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tauth.onAuthStateChanged((authedUser) => {\r\n\t\t\tif (authedUser) {\r\n\t\t\t\tconst { displayName, email, uid, photoURL } = authedUser;\r\n\t\t\t\tconst user = {\r\n\t\t\t\t\tfullName: displayName,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tid: uid,\r\n\t\t\t\t\tavatar: photoURL,\r\n\t\t\t\t};\r\n\t\t\t\tsetAuthUser(user);\r\n\t\t\t} else {\r\n\t\t\t\t// if the user has logged out -> remove them\r\n\t\t\t\tsetAuthUser(\"no user\");\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\tif (authUser == null || authUser == undefined) return null;\r\n\treturn <AuthedUserContext.Provider value={authUser}>{children}</AuthedUserContext.Provider>;\r\n}\r\n","F:\\Projects\\eng-keep\\src\\contexts\\NotificationContext.js",[],"F:\\Projects\\eng-keep\\src\\styles\\theme.js",[],"F:\\Projects\\eng-keep\\src\\components\\single-word\\SingleWord.js",["251","252"],"import { useState } from \"react\";\r\n\r\n// router\r\nimport { useLocation, useHistory, Redirect } from \"react-router-dom\";\r\n\r\n// UI\r\nimport { Grid, IconButton, makeStyles } from \"@material-ui/core\";\r\n\r\n// Util\r\nimport IF from \"../../common-components/util/IF\";\r\n\r\n// Components\r\nimport { RefreshIcon } from \"@heroicons/react/outline\";\r\nimport WordCard from \"../word-list/WordCard\";\r\n\r\n// Style\r\nconst useStyles = makeStyles((theme) => ({\r\n\timageGrid: {\r\n\t\tpadding: 0,\r\n\t},\r\n}));\r\n\r\nfunction SingleWord() {\r\n\tconst classes = useStyles();\r\n\r\n\t// Import router location to get the word object from the state\r\n\tconst location = useLocation();\r\n\tconst wordData = location.state?.wordData;\r\n\tconst id = location.state?.id;\r\n\r\n\t// State vars\r\n\tconst [randomImage, setRandomImage] = useState(wordData?.images[0]);\r\n\r\n\t// handle change the image (randomize it)\r\n\tconst handleRandomizeImage = () => {\r\n\t\tconst rand_image = wordData.images.sort(() => Math.random() - 0.5)[0];\r\n\t\tsetRandomImage(rand_image);\r\n\t};\r\n\r\n\t// a message to display if there is no image available for this word\r\n\tconst noImgMsg = <h3 className=\"text-center mt-2\">No image for this word</h3>;\r\n\r\n\t// if word does not exist then redirect to homepage\r\n\tif (!wordData) return <Redirect to=\"/\" />;\r\n\treturn (\r\n\t\t<div className=\"p-2 border space-x-2\">\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t<Grid item xs={12} md={7}>\r\n\t\t\t\t\t<WordCard id={id} wordData={wordData} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={5} className={`${classes.imageGrid}`}>\r\n\t\t\t\t\t<IF condition={Boolean(randomImage)} elseChildren={noImgMsg}>\r\n\t\t\t\t\t\t<div className=\"relative rounded-md overflow-hidden mt-2 h-72\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"rgba(0, 0, 0, .40)\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full h-full inset-0 absolute z-10 flex items-center justify-center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<IconButton onClick={handleRandomizeImage}>\r\n\t\t\t\t\t\t\t\t\t<RefreshIcon className=\"h-6 text-white cursor-pointer\" />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<img src={randomImage} className=\"w-full h-full absolute object-cover\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</IF>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SingleWord;\r\n","F:\\Projects\\eng-keep\\src\\components\\EngKeep.js",["253","254","255"],"import { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\n\r\n// router\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport UnAuthRoute from \"../common-components/router/UnAuthRoute\";\r\n\r\n// UI\r\nimport { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport HomepageTabs from \"./HomepageTabs\";\r\n\r\n// Icons\r\nimport { ArrowDownIcon } from \"@heroicons/react/outline\";\r\n\r\n// Info (from helpers)\r\nimport {\r\n\tDEFAULT_WORD_LIST_LIMIT,\r\n\tPATHS,\r\n\thomepageTabs,\r\n\tNON_SEARCHABLE_PATHS,\r\n} from \"../helpers/info\";\r\n\r\n// Util\r\nimport IF from \"../common-components/util/IF\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../contexts/UserContext\";\r\n\r\n// Pages\r\nimport Register from \"../pages/auth/Register\";\r\nimport Login from \"../pages/auth/Login\";\r\n\r\n// Components\r\nimport Header from \"./header/Header\";\r\nimport Store from \"../back-ends/Store\";\r\nimport { WordList } from \"./word-list/WordList\";\r\nimport SearchBar from \"./word-list/SearchBar\";\r\nimport AppControls from \"./AppControls\";\r\n\r\n// Style\r\nconst useStyles = makeStyles((theme) => ({\r\n\t// word list section\r\n\twordListWrapper: {\r\n\t\tminHeight: \"calc(100vh - 48px)\" /* 48px - tabs' height */,\r\n\t\tmaxHeight: \"calc(100vh - 48px)\" /* 48px - tabs' height */,\r\n\t\theight: \"calc(100vh - 48px)\" /* 48px - tabs' height */,\r\n\t\toverflowY: \"auto\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\taddWordFormWrapper: {\r\n\t\t// minWidth: 700,\r\n\t},\r\n\tverticalMenuToggler: {\r\n\t\twidth: 64,\r\n\t\theight: 64,\r\n\t\t\"&:focus\": {\r\n\t\t\toutline: \"none\",\r\n\t\t},\r\n\t},\r\n\tverticalMenu: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\tpadding: 10,\r\n\t\tborderRadius: 15,\r\n\t},\r\n\talanBtnWrapper: {},\r\n}));\r\n\r\nexport default function EngKeep() {\r\n\tconst classes = useStyles();\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// Refs\r\n\tconst wordListRef = useRef();\r\n\r\n\t// Router\r\n\t// const history = useHistory();\r\n\tconst routerLocation = useLocation();\r\n\r\n\t// Set the tab depending on the current router path\r\n\tconst routerTab = homepageTabs.findIndex(\r\n\t\t(tab) => tab.path === routerLocation.pathname\r\n\t);\r\n\r\n\t// State vars\r\n\tconst [currentTab, setCurrentTab] = useState(routerTab);\r\n\tconst [wordList, setWordList] = useState(null);\r\n\tconst [filteredWordList, setFilteredWordList] = useState([]);\r\n\tconst [period, setPeriod] = useState(\"today\");\r\n\tconst [limit, setLimit] = useState(DEFAULT_WORD_LIST_LIMIT);\r\n\tconst [query, setQuery] = useState(\"\");\r\n\r\n\t// Import Store component to fetch the word list\r\n\tconst {\r\n\t\thandleGetWordListOnCategory,\r\n\t\thandleGetWholeWordList,\r\n\t\thandleGetWordListByDate,\r\n\t} = Store();\r\n\r\n\t// set a listener to get the last opened word (in localStorage) to scroll to it\r\n\tuseLayoutEffect(() => {\r\n\t\tconst lastScroll = localStorage.getItem(\"last-scroll\");\r\n\t\tconst lastLimit = localStorage.getItem(\"last-limit\");\r\n\t\tconst lastPeriod = localStorage.getItem(\"last-period\");\r\n\t\tconst inWordListPage = routerLocation.pathname.search(\"/word\") == -1;\r\n\t\tif (lastScroll !== null && inWordListPage) {\r\n\t\t\twordListRef.current.scroll({ top: lastScroll });\r\n\r\n\t\t\tif (lastLimit !== null) {\r\n\t\t\t\tsetLimit(parseInt(lastLimit));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.removeItem(\"last-scroll\");\r\n\t\t\t}\r\n\t\t\tif (lastPeriod === null) {\r\n\t\t\t\tlocalStorage.removeItem(\"last-limit\");\r\n\t\t\t}\r\n\t\t\tif (lastPeriod !== null) {\r\n\t\t\t\tsetPeriod(lastPeriod);\r\n\t\t\t\tlocalStorage.removeItem(\"last-period\");\r\n\t\t\t}\r\n\t\t}\r\n\t}, [routerLocation.pathname, filteredWordList, limit]);\r\n\r\n\t// Set a listener to track the current tab and fetch the apt data\r\n\tuseEffect(() => {\r\n\t\t// Don't call the api if there is no user\r\n\t\tif (loggedUser === \"no user\") return setWordList([]);\r\n\r\n\t\tconst currPath = routerLocation.pathname;\r\n\r\n\t\t// get tab's content depending on the current tab\r\n\t\tlet unsubscribe;\r\n\r\n\t\tif (currPath !== \"/\") {\r\n\t\t\t// Get the category depending on the current tab\r\n\t\t\tlet category = \"pronunciation\";\r\n\t\t\tif (currPath === \"/new-words\") category = \"new\";\r\n\r\n\t\t\tif (currPath === PATHS.BY_DATE) {\r\n\t\t\t\tunsubscribe = handleGetWordListByDate(limit, period, setWordList);\r\n\t\t\t} else {\r\n\t\t\t\tunsubscribe = handleGetWordListOnCategory(limit, category, setWordList);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tunsubscribe = handleGetWholeWordList(limit, setWordList);\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\t// Stop the onSnapshot listener as the current tab changes\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, [currentTab, period, loggedUser]);\r\n\r\n\t// Set a listener to reset the limit when the currTab or period gets changed\r\n\tuseEffect(() => {\r\n\t\t// Reset Search text (query)\r\n\t\tsetQuery(\"\");\r\n\r\n\t\t// Reset the limit\r\n\t\tif (localStorage.getItem(\"last-scroll\") === null) {\r\n\t\t\tsetLimit(DEFAULT_WORD_LIST_LIMIT);\r\n\t\t}\r\n\r\n\t\t// Scroll to the top\r\n\t\twordListRef.current.scroll(0, 0);\r\n\t}, [currentTab, period]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (wordList !== null) {\r\n\t\t\tconst wordRegex = new RegExp(query, \"i\");\r\n\t\t\tconst filteredList = wordList.filter(\r\n\t\t\t\t(wordDoc) => wordDoc.word.word.search(wordRegex) !== -1\r\n\t\t\t);\r\n\t\t\tsetFilteredWordList(filteredList);\r\n\t\t}\r\n\t}, [wordList]);\r\n\r\n\t// handle change query\r\n\tconst handleChangeQuery = (e) => {\r\n\t\tconst value = e.target.value;\r\n\r\n\t\t// change the input value\r\n\t\tsetQuery(value);\r\n\r\n\t\t// startTransition the list value\r\n\t\tconst wordRegex = new RegExp(value, \"i\");\r\n\t\tconst filteredList = wordList.filter(\r\n\t\t\t(wordDoc) => wordDoc.word.word.search(wordRegex) !== -1\r\n\t\t);\r\n\r\n\t\tsetFilteredWordList(filteredList);\r\n\t};\r\n\r\n\t// handle change the current tab\r\n\tconst handleChangeTab = (e, newTab) => {\r\n\t\tsetCurrentTab(newTab);\r\n\t};\r\n\r\n\t// Tabs component props\r\n\tconst tabsProps = {\r\n\t\tcurrentTab,\r\n\t\thandleChangeTab,\r\n\t\tisWrapped: true /* Decide wether the label of the tabs should wrap or not */,\r\n\t};\r\n\r\n\t// handle change period\r\n\tconst handleChangePeriod = (newPeriod) => {\r\n\t\tsetPeriod(newPeriod);\r\n\t};\r\n\r\n\t// user logged in condition\r\n\tconst isUserLogged = loggedUser !== \"no user\";\r\n\r\n\t// there are more results condition\r\n\tconst thereMore = limit < filteredWordList.length;\r\n\r\n\t// there are results\r\n\tconst haveResult = filteredWordList.length > 0;\r\n\r\n\t// search box display conditions\r\n\tconst isSearchDisplay =\r\n\t\tObject.values(PATHS).includes(routerLocation.pathname) &&\r\n\t\tisUserLogged &&\r\n\t\twordList?.length !== 0;\r\n\r\n\t// Word list component\r\n\tconst wordListComponent = (\r\n\t\t<WordList\r\n\t\t\tlistRef={wordListRef}\r\n\t\t\tlist={filteredWordList.slice(0, limit)}\r\n\t\t\tperiod={period}\r\n\t\t\tlimit={limit}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<main className=\"bg-gray-100 min-h-screen\">\r\n\t\t\t{/* App header for signin and register */}\r\n\t\t\t<Header />\r\n\r\n\t\t\t{/* App Tabs => done */}\r\n\t\t\t<HomepageTabs\r\n\t\t\t\thandleChangePeriod={handleChangePeriod}\r\n\t\t\t\tperiod={period}\r\n\t\t\t\t{...tabsProps}\r\n\t\t\t/>\r\n\r\n\t\t\t{/* Each tab content depending on the current tab */}\r\n\t\t\t<Switch>\r\n\t\t\t\t<section ref={wordListRef} className={`${classes.wordListWrapper} p-4`}>\r\n\t\t\t\t\t{/* A message to display if the user is not logged in */}\r\n\t\t\t\t\t<IF\r\n\t\t\t\t\t\tcondition={\r\n\t\t\t\t\t\t\t!isUserLogged &&\r\n\t\t\t\t\t\t\t// This condition is to hide the search bar in signin & register pages\r\n\t\t\t\t\t\t\t!Object.values(NON_SEARCHABLE_PATHS).includes(\r\n\t\t\t\t\t\t\t\trouterLocation.pathname\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h2 className=\"font-medium text-lg text-center\">\r\n\t\t\t\t\t\t\tLog in to add &amp; see words\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t</IF>\r\n\r\n\t\t\t\t\t{/* Search Box - if the path is anything but word-listed tabs (all, new, pronunciation) */}\r\n\t\t\t\t\t{/* Anything but a single word page */}\r\n\t\t\t\t\t<IF condition={isSearchDisplay}>\r\n\t\t\t\t\t\t<SearchBar\r\n\t\t\t\t\t\t\twordList={wordList}\r\n\t\t\t\t\t\t\tsetFilteredList={setFilteredWordList}\r\n\t\t\t\t\t\t\tsetLimit={setLimit}\r\n\t\t\t\t\t\t\tquery={query}\r\n\t\t\t\t\t\t\thandleChangeQuery={handleChangeQuery}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</IF>\r\n\r\n\t\t\t\t\t{/* a switch to move between tabs */}\r\n\r\n\t\t\t\t\t<Route path=\"/\" exact>\r\n\t\t\t\t\t\t{wordListComponent}\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<UnAuthRoute path=\"/register\">\r\n\t\t\t\t\t\t<Register />\r\n\t\t\t\t\t</UnAuthRoute>\r\n\r\n\t\t\t\t\t<UnAuthRoute path=\"/signin\">\r\n\t\t\t\t\t\t<Login />\r\n\t\t\t\t\t</UnAuthRoute>\r\n\r\n\t\t\t\t\t<Route path=\"/:id\" exact>\r\n\t\t\t\t\t\t{wordListComponent}\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t{/* Load more button */}\r\n\t\t\t\t\t<IF\r\n\t\t\t\t\t\tcondition={\r\n\t\t\t\t\t\t\t// The third condition is for single page\r\n\t\t\t\t\t\t\tthereMore &&\r\n\t\t\t\t\t\t\thaveResult &&\r\n\t\t\t\t\t\t\tObject.values(PATHS).includes(routerLocation.pathname)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tsetLimit((prev) => prev + DEFAULT_WORD_LIST_LIMIT)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ArrowDownIcon className=\"h-5 text-blue-600\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</IF>\r\n\t\t\t\t</section>\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* Controls - as a speed dial - add word, alanAI and scroll to top buttons  */}\r\n\t\t\t{isUserLogged && <AppControls wordListRef={wordListRef} />}\r\n\t\t</main>\r\n\t);\r\n}\r\n","F:\\Projects\\eng-keep\\src\\hooks\\useAlan.js",["256","257","258"],"import { useEffect, useState, useCallback } from \"react\";\r\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../contexts/UserContext\";\r\n\r\n// Components\r\nimport Store from \"../back-ends/Store\";\r\nimport { db } from \"../back-ends/database\";\r\nimport { getDateOnPeriod } from \"../helpers/functions\";\r\n\r\nconst COMMANDS = {\r\n\tADD_WORD: \"add-word\",\r\n\tSAY_REVISION: \"say-revision\",\r\n};\r\n\r\nexport default function useAlan() {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\tconst [alanInstance, setAlanInstance] = useState(null);\r\n\r\n\t// Import store component to handle adding new words\r\n\tconst { handleAddWord } = Store();\r\n\r\n\tconst addWord = useCallback(\r\n\t\t({ detail }) => {\r\n\t\t\tconst wordData = {\r\n\t\t\t\tcategory: detail.category.toLowerCase(),\r\n\t\t\t\tword: detail.word.toLowerCase(),\r\n\t\t\t\tsentences: [...detail.sentences],\r\n\t\t\t\tsynonyms: [],\r\n\t\t\t};\r\n\t\t\thandleAddWord(wordData);\r\n\t\t},\r\n\t\t[alanInstance]\r\n\t);\r\n\r\n\tconst sayRev = useCallback(\r\n\t\tasync ({ detail }) => {\r\n\t\t\t// Get today's words from Store component\r\n\t\t\tdb.collection(\"users\")\r\n\t\t\t\t.doc(loggedUser.id)\r\n\t\t\t\t.collection(\"user-words\")\r\n\t\t\t\t.where(\"timestamp\", \">=\", getDateOnPeriod(\"today\").startDate)\r\n\t\t\t\t.orderBy(\"timestamp\", \"asc\")\r\n\t\t\t\t.get()\r\n\t\t\t\t.then((snapshot) => {\r\n\t\t\t\t\tconst todays_words = snapshot.docs.map((doc) => doc.data());\r\n\t\t\t\t\ttodays_words.forEach((wordObj) => {\r\n\t\t\t\t\t\tconst wannaSayExample =\r\n\t\t\t\t\t\t\tdetail.wannaSayExample === \"yes\"\r\n\t\t\t\t\t\t\t\t? `example: ${wordObj.sentences[0].body}`\r\n\t\t\t\t\t\t\t\t: \"\";\r\n\t\t\t\t\t\talanInstance.playText(`${wordObj.word}. ${wannaSayExample}`);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t[alanInstance]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(COMMANDS.ADD_WORD, addWord);\r\n\t\twindow.addEventListener(COMMANDS.SAY_REVISION, sayRev);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(COMMANDS.ADD_WORD, addWord);\r\n\t\t\twindow.removeEventListener(COMMANDS.SAY_REVISION, sayRev);\r\n\t\t};\r\n\t}, [addWord, sayRev]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Problem: when logged out it doesn't disappear\r\n\t\tif (loggedUser === \"no user\") {\r\n\t\t\tdocument.querySelector(\".alanBtn-root\")?.remove();\r\n\t\t\tsetAlanInstance(null);\r\n\t\t}\r\n\r\n\t\tif (loggedUser === \"no user\" || alanInstance !== null) return;\r\n\r\n\t\tsetAlanInstance(\r\n\t\t\talanBtn({\r\n\t\t\t\tbottom: 15,\r\n\t\t\t\tleft: 15,\r\n\t\t\t\tkey: process.env.REACT_APP_ALAN_KEY,\r\n\t\t\t\tonCommand: ({ command, payload }) => {\r\n\t\t\t\t\twindow.dispatchEvent(new CustomEvent(command, { detail: payload }));\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t);\r\n\t}, [loggedUser]);\r\n\r\n\treturn alanInstance;\r\n}\r\n","F:\\Projects\\eng-keep\\src\\redux\\reducers\\globals.js",[],"F:\\Projects\\eng-keep\\src\\back-ends\\database.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\ui\\NotificationSnackbar.js",["259"],"import React from 'react'\r\n\r\n// material-ui imports\r\nimport { Snackbar, Slide } from \"@material-ui/core\"\r\nimport { Alert } from \"@material-ui/lab\"\r\n\r\n\r\nexport default function NotificationSnackbar(props) {\r\n    const { onClose, classValue, alertSeverity, notificationMsg } = props\r\n\r\n    return (\r\n        <Snackbar\r\n            disableWindowBlurListener\r\n            className={classValue}\r\n            ClickAwayListenerProps={{ mouseEvent: false }}\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n            TransitionComponent={Slide}\r\n            open={notificationMsg == \"\" ? false : true}\r\n            autoHideDuration={3000}\r\n            onClose={onClose} >\r\n\r\n            <Alert severity={alertSeverity}>{notificationMsg}</Alert>\r\n\r\n        </Snackbar>\r\n    )\r\n}\r\n","F:\\Projects\\eng-keep\\src\\components\\HomepageTabs.js",["260"],"import { useState, useRef } from \"react\";\r\n\r\n// Router\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// Material-UI imports\r\nimport { makeStyles, Tabs, Tab } from \"@material-ui/core\";\r\n\r\n// Hooks\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\n\r\n// Info\r\nimport { PATHS, homepageTabs } from \"../helpers/info\";\r\n\r\n// Components\r\nimport PeriodMenu from \"./PeriodMenu\";\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttabsRoot: {\r\n\t\tbackground: \"white\",\r\n\t},\r\n}));\r\n\r\nfunction HomepageTabs({\r\n\tcurrentTab,\r\n\thandleChangeTab,\r\n\tisWrapped,\r\n\tindClr = \"black\",\r\n\thandleChangePeriod,\r\n\tperiod,\r\n}) {\r\n\tconst classes = useStyles();\r\n\r\n\t// refs\r\n\tconst sortByDateTabRef = useRef();\r\n\r\n\t// State vars\r\n\tconst [periodMenuOpen, setPeriodMenuOpen] = useState(false);\r\n\r\n\t// Get the window width to decide the wrapped property if it is enabled\r\n\tconst { windowWidth } = useWindowWidth();\r\n\r\n\t// handle toggle the period menu\r\n\tconst handleTogglePeriodMenu = () => {\r\n\t\tsetPeriodMenuOpen((prev) => !prev);\r\n\t};\r\n\r\n\t// const wrapping = windowWidth <= 600 ? { wrapped: true } : {};\r\n\r\n\t// map through tabs\r\n\tconst mappedTabs = homepageTabs.map((tab) => (\r\n\t\t<Tab\r\n\t\t\tkey={tab.label}\r\n\t\t\tlabel={tab.label}\r\n\t\t\tto={tab.path}\r\n\t\t\tcomponent={RouterLink}\r\n\t\t\t{...(tab.path === PATHS.BY_DATE && {\r\n\t\t\t\tref: sortByDateTabRef,\r\n\t\t\t\tonClick: handleTogglePeriodMenu,\r\n\t\t\t})}\r\n\t\t/>\r\n\t));\r\n\r\n\t// Indicator styles object\r\n\tconst indicatorStyles = {\r\n\t\tbackground: indClr,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tabs\r\n\t\t\t\tclasses={{ root: classes.tabsRoot }}\r\n\t\t\t\tonChange={handleChangeTab}\r\n\t\t\t\tTabIndicatorProps={{ style: indicatorStyles }}\r\n\t\t\t\tvalue={currentTab}\r\n\t\t\t\tcentered\r\n\t\t\t>\r\n\t\t\t\t{mappedTabs}\r\n\t\t\t</Tabs>\r\n\r\n\t\t\t{/* Period menu dropdown */}\r\n\t\t\t<PeriodMenu\r\n\t\t\t\topen={periodMenuOpen}\r\n\t\t\t\tanchorEl={sortByDateTabRef.current}\r\n\t\t\t\tcurrentPeriod={period}\r\n\t\t\t\thandleChangePeriod={handleChangePeriod}\r\n\t\t\t\thandleTogglePeriodMenu={handleTogglePeriodMenu}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default HomepageTabs;\r\n","F:\\Projects\\eng-keep\\src\\back-ends\\Store.js",["261","262","263"],"F:\\Projects\\eng-keep\\src\\components\\AppControls.js",["264","265","266","267"],"import { useEffect, useState } from \"react\";\r\n// UI\r\nimport { Fab, makeStyles, Slide } from \"@material-ui/core\";\r\nimport { SpeedDialAction, SpeedDial, SpeedDialIcon } from \"@material-ui/lab\";\r\nimport PopUp from \"../common-components/ui/PopUp\";\r\n\r\n// icons\r\nimport { Add, ArrowUpward, Close, Menu } from \"@material-ui/icons\";\r\n\r\n// info\r\nimport { wordDataInitialValues } from \"../helpers/info\";\r\n\r\n// hooks\r\n\r\n// components\r\nimport WordForm from \"../forms/WordForm\";\r\nimport LastRevisedWordFrom from \"../forms/LastRevisedWordFrom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tspeedDial: {\r\n\t\tposition: \"fixed\",\r\n\t\tright: 15,\r\n\t\tbottom: 13,\r\n\t},\r\n\taddWordActionFab: {\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\tcolor: theme.palette.common.white,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: theme.palette.secondary.light,\r\n\t\t},\r\n\t},\r\n\tscrollTopActionFab: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tcolor: theme.palette.common.white,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst AppControls = ({ wordListRef }) => {\r\n\tconst classes = useStyles();\r\n\r\n\t// State vars\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [scrollTop, setScrollTop] = useState(false);\r\n\tconst [addWordFormPopupOpen, setPopupOpen] = useState(false);\r\n\tconst [openRevised, setRevisedOpen] = useState(false);\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\t// set a listener for the word list scroll-to-top button\r\n\tuseEffect(() => {\r\n\t\twordListRef.current.addEventListener(\"scroll\", (e) => {\r\n\t\t\tconst wordListScrollTop = e.target.scrollTop;\r\n\t\t\tif (wordListScrollTop > 300) {\r\n\t\t\t\tsetScrollTop(true);\r\n\t\t\t} else setScrollTop(false);\r\n\t\t});\r\n\t}, [wordListRef.current]);\r\n\r\n\t// handle scroll top\r\n\tconst handleScrollWayTop = () => {\r\n\t\twordListRef.current.scroll({ top: 0, behavior: \"smooth\" });\r\n\t};\r\n\r\n\t// handle toggle add word form popup\r\n\tconst handleTogglePopup = () => {\r\n\t\tsetPopupOpen((prev) => !prev);\r\n\t};\r\n\r\n\t// handle toggle last revised word form popup\r\n\tconst toggleRevisedWordPopup = () => {\r\n\t\tsetRevisedOpen((isOpen) => !isOpen);\r\n\t};\r\n\r\n\t// add new word popup props\r\n\tconst PopUpProps = {\r\n\t\tinfoFunc: {\r\n\t\t\ttitle: \"Add a new word\",\r\n\t\t\tisOpen: addWordFormPopupOpen,\r\n\t\t},\r\n\t\tcloseHandle: handleTogglePopup,\r\n\t\tmaxWidth: \"sm\",\r\n\t\tdividers: true,\r\n\t};\r\n\r\n\t// add last revised word popup props\r\n\tconst revisedPopupProps = {\r\n\t\tinfoFunc: {\r\n\t\t\ttitle: \"Add last revised word\",\r\n\t\t\tisOpen: openRevised,\r\n\t\t},\r\n\t\tcloseHandle: toggleRevisedWordPopup,\r\n\t\tmaxWidth: \"sm\",\r\n\t\tdividers: true,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"relative\">\r\n\t\t\t<SpeedDial\r\n\t\t\t\tFabProps={{ size: \"small\" }}\r\n\t\t\t\tariaLabel=\"App Controls Speed Dial\"\r\n\t\t\t\ticon={open ? <Close /> : <Menu />}\r\n\t\t\t\tclassName={classes.speedDial}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\topen={open}\r\n\t\t\t>\r\n\t\t\t\t{/* Add word form's toggler */}\r\n\t\t\t\t<SpeedDialAction\r\n\t\t\t\t\ticon={<Add />}\r\n\t\t\t\t\ttooltipTitle=\"Add Word\"\r\n\t\t\t\t\tclasses={{ fab: classes.addWordActionFab }}\r\n\t\t\t\t\tonClick={handleTogglePopup}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* Add last word I revised form's toggler */}\r\n\t\t\t\t<SpeedDialAction\r\n\t\t\t\t\ticon={<Add />}\r\n\t\t\t\t\ttooltipTitle=\"Add last revised word\"\r\n\t\t\t\t\tonClick={toggleRevisedWordPopup}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* Scroll to top button */}\r\n\t\t\t\t{scrollTop && (\r\n\t\t\t\t\t<SpeedDialAction\r\n\t\t\t\t\t\ticon={<ArrowUpward />}\r\n\t\t\t\t\t\ttooltipTitle=\"Scroll Top\"\r\n\t\t\t\t\t\tclasses={{ fab: classes.scrollTopActionFab }}\r\n\t\t\t\t\t\tonClick={handleScrollWayTop}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</SpeedDial>\r\n\r\n\t\t\t{/* Add word popup */}\r\n\t\t\t<PopUp {...PopUpProps}>\r\n\t\t\t\t<WordForm\r\n\t\t\t\t\taction=\"add\"\r\n\t\t\t\t\twordData={wordDataInitialValues}\r\n\t\t\t\t\thandleClosePopup={handleTogglePopup}\r\n\t\t\t\t/>\r\n\t\t\t</PopUp>\r\n\r\n\t\t\t{/* Add last word I revised popup */}\r\n\t\t\t<PopUp {...revisedPopupProps}>\r\n\t\t\t\t{/* last revised word form */}\r\n\t\t\t\t<LastRevisedWordFrom closePopup={toggleRevisedWordPopup} />\r\n\t\t\t</PopUp>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AppControls;\r\n","F:\\Projects\\eng-keep\\src\\common-components\\util\\IF.js",[],"F:\\Projects\\eng-keep\\src\\components\\word-list\\WordList.js",[],"F:\\Projects\\eng-keep\\src\\components\\word-list\\WordCard.js",["268"],"import { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// UI\r\nimport { Fade } from \"@material-ui/core\";\r\n\r\n// Icons\r\n\r\n// Util\r\nimport IF from \"../../common-components/util/IF\";\r\n\r\n// Components\r\nimport Store from \"../../back-ends/Store\";\r\nimport WordControls from \"./WordControls\";\r\nimport WordExamples from \"./WordExamples\";\r\nimport WordSynonyms from \"./WordSynonyms\";\r\nimport WordCardHeader from \"./WordCardHeader\";\r\n\r\nfunction WordCard({ wordData, id, listRef, limit, period }) {\r\n\t// Destructuring through the word object\r\n\tconst { word, images, sentences, synonyms, wordAudio } = wordData;\r\n\r\n\t// Router\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tif (location.state && location.state.lastWordOpen) {\r\n\t\thistory.replace(location.state.lastWordOpen);\r\n\t}\r\n\r\n\t// State vars\r\n\tconst [wordImage, setWordImage] = useState(\"\");\r\n\r\n\t// Refs\r\n\tconst audioRef = useRef();\r\n\r\n\t// Import the Store component to handle getting the synonym audio src\r\n\tconst { handleDeleteWord } = Store();\r\n\r\n\t// Handle delete word\r\n\tconst handleRemoveWord = () => {\r\n\t\thandleDeleteWord(id);\r\n\t};\r\n\r\n\t// handle show a random image\r\n\tconst handleShowImage = () => {\r\n\t\tconst randImage =\r\n\t\t\timages.sort(() => Math.random() - 0.5).length === 0\r\n\t\t\t\t? \"\"\r\n\t\t\t\t: images.sort(() => Math.random() - 0.5)[0];\r\n\t\tsetWordImage((prevState) => (prevState === \"\" ? randImage : \"\"));\r\n\t};\r\n\r\n\t// Card styles - classNames\r\n\tconst cardStyles = {\r\n\t\tbackgroundImage: `url('${wordImage}')`,\r\n\t\tminHeight: wordData.category === \"phrase\" && 272,\r\n\t\theight: wordData.category === \"phrase\" && 272,\r\n\t};\r\n\tconst cardClassnames = `${\r\n\t\twordImage !== \"\" && \"text-white\"\r\n\t} border p-4 bg-white bg-cover rounded-md overflow-hidden relative shadow-inner bg-center bg-no-repeat`;\r\n\r\n\treturn (\r\n\t\t<div className={cardClassnames} style={cardStyles} id={word}>\r\n\t\t\t{/* overlay */}\r\n\t\t\t<IF condition={wordImage !== \"\"}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"absolute w-full h-full inset-0\"\r\n\t\t\t\t\tstyle={{ background: \"rgb(0 0 0 / 60%)\" }}\r\n\t\t\t\t></div>\r\n\t\t\t</IF>\r\n\t\t\t{/* Word Body */}\r\n\t\t\t<div className=\"flex flex-col relative h-full\">\r\n\t\t\t\t{/* Header */}\r\n\t\t\t\t<WordCardHeader\r\n\t\t\t\t\tperiod={period}\r\n\t\t\t\t\tlimit={limit}\r\n\t\t\t\t\tlistRef={listRef}\r\n\t\t\t\t\twordImage={wordImage}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\twordData={wordData}\r\n\t\t\t\t\taudioRef={audioRef}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* Word Controls */}\r\n\t\t\t\t<WordControls\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\twordData={wordData}\r\n\t\t\t\t\thandleRemoveWord={handleRemoveWord}\r\n\t\t\t\t\thandleShowImage={handleShowImage}\r\n\t\t\t\t\twordImage={wordImage}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* If there is no image hide the content */}\r\n\t\t\t\t<Fade in={!Boolean(wordImage)}>\r\n\t\t\t\t\t<div className=\"mt-auto\">\r\n\t\t\t\t\t\t{/* Sentences */}\r\n\t\t\t\t\t\t<WordExamples sentences={sentences} word={word} />\r\n\r\n\t\t\t\t\t\t{/* Synonyms */}\r\n\t\t\t\t\t\t<WordSynonyms synonyms={synonyms} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fade>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* word audio sound reference */}\r\n\t\t\t<audio src={wordAudio} ref={audioRef}></audio>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WordCard;\r\n","F:\\Projects\\eng-keep\\src\\common-components\\router\\UnAuthRoute.js",["269"],"// Router\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\n// Contexts - to get the already logged user\r\nimport { AuthedUser } from \"../../contexts/UserContext\";\r\n\r\nfunction UnAuthRoute({ children, ...other }) {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...other}\r\n\t\t\trender={({ location }) =>\r\n\t\t\t\tloggedUser == \"no user\" ? (\r\n\t\t\t\t\tchildren\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: \"/\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default UnAuthRoute;\r\n","F:\\Projects\\eng-keep\\src\\helpers\\info.js",[],"F:\\Projects\\eng-keep\\src\\components\\word-list\\SearchBar.js",[],"F:\\Projects\\eng-keep\\src\\helpers\\functions.js",["270","271","272","273","274"],"function getDateOnPeriod(period) {\r\n\tlet currDate = new Date();\r\n\tconst currDay = currDate.getDate();\r\n\tconst currMonth = currDate.getMonth();\r\n\tconst currYear = currDate.getFullYear();\r\n\r\n\tlet endDate = new Date(`${currYear}-${currMonth + 1}-${currDay + 1}`);\r\n\r\n\tswitch (period) {\r\n\t\tcase \"today\":\r\n\t\t\tbreak;\r\n\t\tcase \"yesterday\":\r\n\t\t\tendDate.setDate(currDay);\r\n\t\t\tcurrDate.setDate(currDay - 1);\r\n\t\t\tbreak;\r\n\t\tcase \"last-week\":\r\n\t\t\tcurrDate.setDate(currDay - 7);\r\n\t\t\tbreak;\r\n\t\tcase \"last-month\":\r\n\t\t\tcurrDate.setMonth(currMonth - 1);\r\n\t\t\tbreak;\r\n\t\t// Custom date\r\n\t\tdefault:\r\n\t\t\t// change the period's type to (date object) because LocalStorage makes it as string\r\n\t\t\tperiod = new Date(period);\r\n\t\t\tcurrDate.setDate(period.getDate());\r\n\t\t\tcurrDate.setMonth(period.getMonth());\r\n\t\t\tcurrDate.setFullYear(period.getFullYear());\r\n\t\t\tendDate = new Date(\r\n\t\t\t\t`${period.getFullYear()}-${period.getMonth() + 1}-${\r\n\t\t\t\t\tperiod.getDate() + 1\r\n\t\t\t\t}`\r\n\t\t\t);\r\n\t}\r\n\r\n\tconst startDate = new Date(\r\n\t\t`${currDate.getFullYear()}-${\r\n\t\t\tcurrDate.getMonth() + 1\r\n\t\t}-${currDate.getDate()}`.replace(/\\//g, \"-\")\r\n\t);\r\n\treturn { startDate, endDate };\r\n}\r\n\r\nconst userValidation = (firedInput, setErrors) => {\r\n\tconst errors = {};\r\n\tconst emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\tconst passwordRegex =\r\n\t\t/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?=.*[a-zA-Z]).{8,}$/;\r\n\tconst nameRegex = /^(?=.*\\d)*(?=.*[a-z])(?=.*[a-zA-Z]).{8,}$/;\r\n\tconst usernameRegex = /^(?=.*\\d)*(?=.*[a-z])(?=.*[a-zA-Z]).{5,}$/;\r\n\tconst webUrlRegex =\r\n\t\t/[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\r\n\tif (\"fullName\" in firedInput) {\r\n\t\terrors.fullName = valCond(\r\n\t\t\tnameRegex.test(firedInput.fullName),\r\n\t\t\t\"Your Name Must be 8 letters at least\"\r\n\t\t);\r\n\t}\r\n\tif (\"username\" in firedInput) {\r\n\t\terrors.username = valCond(\r\n\t\t\tusernameRegex.test(firedInput.username),\r\n\t\t\t\"Username must be 5 letters at least\"\r\n\t\t);\r\n\t}\r\n\tif (\"email\" in firedInput) {\r\n\t\terrors.email = valCond(\r\n\t\t\temailRegex.test(firedInput.email),\r\n\t\t\t\"Email is badly formatted\"\r\n\t\t);\r\n\t}\r\n\tif (\"password\" in firedInput) {\r\n\t\terrors.password = valCond(\r\n\t\t\tpasswordRegex.test(firedInput.password),\r\n\t\t\t\"Password isn't strong\"\r\n\t\t);\r\n\t}\r\n\tif (\"website\" in firedInput) {\r\n\t\terrors.website = valCond(\r\n\t\t\tfiredInput.website == \"\" || webUrlRegex.test(firedInput.website),\r\n\t\t\t\"Url is bad formatted\"\r\n\t\t);\r\n\t}\r\n\r\n\tsetErrors(errors);\r\n\r\n\treturn Object.values(errors).every((input) => input == \"\");\r\n};\r\n\r\n// validation condition\r\nconst valCond = (condition, errMsg) => {\r\n\treturn condition ? \"\" : `${errMsg}.`;\r\n};\r\n\r\n// DuplicatableKey => the key that may duplicate in the objects and causes them to duplicate\r\nconst removeDuplicatedObjsInArr = (array, duplicatableKey) => {\r\n\tconst keys = array.map((obj) => obj[duplicatableKey]);\r\n\tconst refinedKeys = [...new Set(keys)];\r\n\tconst finalArray = refinedKeys.map((key) =>\r\n\t\tarray.find((item) => item[duplicatableKey] === key)\r\n\t);\r\n\r\n\treturn finalArray;\r\n};\r\n\r\nexport { getDateOnPeriod, userValidation, removeDuplicatedObjsInArr };\r\n","F:\\Projects\\eng-keep\\src\\components\\header\\Header.js",["275","276","277","278"],"// router\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// UI\r\nimport { AppBar, Avatar, Button, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\r\n\r\n// Icon\r\nimport { LoginIcon, LogoutIcon, UserAddIcon } from \"@heroicons/react/outline\";\r\n\r\n// Util\r\nimport IF from \"../../common-components/util/IF\";\r\n\r\n// Hooks\r\nimport useAlan from \"../../hooks/useAlan\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../../contexts/UserContext\";\r\n\r\n// Components\r\nimport Store from \"../../back-ends/Store\";\r\nimport { createElement } from \"react\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\tuserAvatar: {\r\n\t\twidth: 32,\r\n\t\theight: 32,\r\n\t},\r\n}));\r\n\r\nfunction Header() {\r\n\tconst classes = useStyles();\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// Import Store component to handle Logout\r\n\tconst { handleSignOut } = Store();\r\n\r\n\t// Button props\r\n\tconst btnProps = (color, icon, to, component = RouterLink) => ({\r\n\t\tcolor,\r\n\t\tcomponent,\r\n\t\tstartIcon: icon,\r\n\t\tto,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<AppBar color=\"inherit\" variant=\"outlined\" position=\"relative\">\r\n\t\t\t<Toolbar variant=\"dense\">\r\n\t\t\t\t{/* Login state (If there is no a user) */}\r\n\t\t\t\t<IF condition={loggedUser == \"no user\"}>\r\n\t\t\t\t\t<div className=\"flex flex-1 items-center space-x-2 app-header\">\r\n\t\t\t\t\t\t<Button {...btnProps(\"primary\", <LoginIcon className=\"h-6\" />, \"/signin\")}>\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Login</span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button {...btnProps(\"primary\", <UserAddIcon className=\"h-5\" />, \"/register\")}>\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Register</span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</IF>\r\n\r\n\t\t\t\t{/* logout state (If there is a user) */}\r\n\t\t\t\t{loggedUser != \"no user\" && (\r\n\t\t\t\t\t<div className=\"flex flex-1 items-center justify-between\">\r\n\t\t\t\t\t\t{/* User name and avatar */}\r\n\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<Avatar className={classes.userAvatar} src={loggedUser.avatar}>\r\n\t\t\t\t\t\t\t\t{loggedUser.fullName[0]}\r\n\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t<h3 className=\"font-semibold ml-2\">{loggedUser.fullName}</h3>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<IconButton color=\"secondary\" onClick={handleSignOut}>\r\n\t\t\t\t\t\t\t<LogoutIcon className=\"h-6\" />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","F:\\Projects\\eng-keep\\src\\pages\\auth\\Register.js",[],"F:\\Projects\\eng-keep\\src\\pages\\auth\\Login.js",[],"F:\\Projects\\eng-keep\\src\\components\\PeriodMenu.js",["279"],"import { useEffect, useState } from \"react\";\r\n// UI\r\nimport { ClickAwayListener, makeStyles, MenuItem, MenuList } from \"@material-ui/core\";\r\nimport CustomMenuList from \"../common-components/ui/CustomMenuList\";\r\nimport \"date-fns\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// Info\r\nimport { DATE_SORTING_PERIODS } from \"../helpers/info\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\tactiveItem: {\r\n\t\tborderLeft: \"2px solid black\",\r\n\t},\r\n}));\r\n\r\nfunction PeriodMenu({ open, anchorEl, handleChangePeriod, handleTogglePeriodMenu, currentPeriod }) {\r\n\tconst classes = useStyles();\r\n\r\n\t// State vars\r\n\tconst [customDateOpen, setCustomDateOpen] = useState(false);\r\n\tconst [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n\t//  handle click on the menu item (period item)\r\n\tconst handleClickItem = (period) => {\r\n\t\t// Change the curr period\r\n\t\thandleChangePeriod(period);\r\n\r\n\t\t// Close the menu\r\n\t\thandleTogglePeriodMenu();\r\n\t};\r\n\r\n\t// Map through date period\r\n\tconst mappedPeriods = DATE_SORTING_PERIODS.map(({ label, period }) => (\r\n\t\t<MenuItem\r\n\t\t\tkey={label}\r\n\t\t\tonClick={() => handleClickItem(period)}\r\n\t\t\tclassName={currentPeriod === period && classes.activeItem}\r\n\t\t>\r\n\t\t\t{label}\r\n\t\t</MenuItem>\r\n\t));\r\n\r\n\tconst isCustomDate =\r\n\t\ttypeof currentPeriod === \"object\" ||\r\n\t\t(typeof currentPeriod === \"object\" && currentPeriod.label === undefined);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isCustomDate) setSelectedDate(new Date());\r\n\t}, [currentPeriod]);\r\n\r\n\treturn (\r\n\t\t<CustomMenuList open={open} anchorEl={anchorEl} placement={\"center\"}>\r\n\t\t\t{/* away listener to close the menu as we click outside of the menu */}\r\n\t\t\t<ClickAwayListener onClickAway={handleTogglePeriodMenu}>\r\n\t\t\t\t<div className=\"w-44\">\r\n\t\t\t\t\t<MenuList autoFocusItem>\r\n\t\t\t\t\t\t{mappedPeriods}\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tclassName={isCustomDate && classes.activeItem}\r\n\t\t\t\t\t\t\tonClick={() => setCustomDateOpen(true)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCustom Date\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</MenuList>\r\n\r\n\t\t\t\t\t{/* Date Picker */}\r\n\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t\t<div className=\"hidden\">\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\topen={customDateOpen}\r\n\t\t\t\t\t\t\t\tvalue={selectedDate}\r\n\t\t\t\t\t\t\t\tonChange={(date) => {\r\n\t\t\t\t\t\t\t\t\thandleChangePeriod(date);\r\n\r\n\t\t\t\t\t\t\t\t\t// Change the actual value\r\n\t\t\t\t\t\t\t\t\tsetSelectedDate(date);\r\n\r\n\t\t\t\t\t\t\t\t\t// Close the menu\r\n\t\t\t\t\t\t\t\t\thandleTogglePeriodMenu();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClose={() => setCustomDateOpen(false)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t</div>\r\n\t\t\t</ClickAwayListener>\r\n\t\t</CustomMenuList>\r\n\t);\r\n}\r\n\r\nexport default PeriodMenu;\r\n","F:\\Projects\\eng-keep\\src\\back-ends\\HelperFunctions.js",["280","281","282"],"F:\\Projects\\eng-keep\\src\\forms\\LastRevisedWordFrom.js",[],"F:\\Projects\\eng-keep\\src\\components\\word-list\\WordCardHeader.js",[],"F:\\Projects\\eng-keep\\src\\components\\word-list\\WordExamples.js",["283"],"import { useState, useEffect } from \"react\";\r\n\r\n// UI\r\nimport { RefreshIcon } from \"@heroicons/react/outline\";\r\nimport { Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\n// Utilities\r\nimport parse from \"html-react-parser\";\r\n\r\nfunction WordExamples({ sentences, word }) {\r\n\t// State vars\r\n\t// for sentences so that i can handle refreshing it\r\n\tconst [sents, setSents] = useState(sentences);\r\n\r\n\t// handle refresh the sentences list\r\n\tconst handleRefreshSentences = () => {\r\n\t\tconst newSentences = sentences.sort(() => Math.random() - 0.5);\r\n\r\n\t\tsetSents([...newSentences]);\r\n\t};\r\n\r\n\t// Set a listener for sents update\r\n\tuseEffect(() => {\r\n\t\t// if sentences get updated then refresh the list\r\n\t\thandleRefreshSentences();\r\n\t}, [sentences]);\r\n\r\n\t// Map through sentences\r\n\tlet mappedSentences = sents.slice(0, 3).map(({ body, id, userProvided }) => {\r\n\t\t// word.slice(0, word.length - 1) to handle the (e) in most of words like accus(e)ing\r\n\t\tconst keywordRegex = new RegExp(`(${word.slice(0, word.length - 1)})\\\\w*`, \"gi\");\r\n\t\tconst ownSensStyle = \"text-red-400\";\r\n\t\treturn (\r\n\t\t\tbody !== \"\" && (\r\n\t\t\t\t<li key={id} className={`mb-2 leading-5 text-sm  ${userProvided && ownSensStyle}`}>\r\n\t\t\t\t\t{parse(body.replace(keywordRegex, `<span class='underline'>$&</span>`))}\r\n\t\t\t\t\t{body.includes(\".\") ? \"\" : \".\"}\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<h4 className=\"mt-3 mb-1 font-semibold flex items-center space-x-1\">\r\n\t\t\t\t<span>Sentences</span>\r\n\t\t\t\t<Tooltip title={\"Refresh Sentences\"} placement=\"right\" arrow={true}>\r\n\t\t\t\t\t<IconButton size=\"small\" onClick={handleRefreshSentences}>\r\n\t\t\t\t\t\t<RefreshIcon className={\"h-4 text-red-500 cursor-pointer\"} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</h4>\r\n\t\t\t<ul>{mappedSentences}</ul>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default WordExamples;\r\n","F:\\Projects\\eng-keep\\src\\components\\word-list\\WordSynonyms.js",["284"],"F:\\Projects\\eng-keep\\src\\components\\word-list\\WordControls.js",["285"],"import { useState } from \"react\";\r\n\r\n// UI\r\nimport { Button } from \"@material-ui/core\";\r\nimport PopUp from \"../../common-components/ui/PopUp\";\r\n\r\n// Icons\r\nimport { PencilIcon, PhotographIcon, TrashIcon } from \"@heroicons/react/outline\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../../contexts/UserContext\";\r\n\r\n// Components\r\nimport WordForm from \"../../forms/WordForm\";\r\nimport ConfirmPopUp from \"../../common-components/ui/ConfirmPopUp\";\r\nimport IF from \"../../common-components/util/IF\";\r\n\r\nfunction WordControls({ handleRemoveWord, handleShowImage, wordData, id, wordImage }) {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// State vars\r\n\tconst [updateModalOpen, setUpdateModalOpen] = useState(false);\r\n\tconst [confirmDeletePopupOpen, setConfirmDeletePopupOpen] = useState(false);\r\n\r\n\t// handle toggle add word form popup\r\n\tconst handleTogglePopup = () => {\r\n\t\tsetUpdateModalOpen((prev) => !prev);\r\n\t};\r\n\r\n\t// Handle click delete\r\n\tconst handleConfirmDeleteWordOpen = () => {\r\n\t\tsetConfirmDeletePopupOpen((prev) => !prev);\r\n\t};\r\n\r\n\t// Delete dialog function\r\n\tconst deleteDialogFunc = {\r\n\t\tisOpen: confirmDeletePopupOpen,\r\n\t\ttitle: \"Are you sure ?\",\r\n\t\tsubTitle: \"You can't undo this action\",\r\n\t\tonConfirm: handleRemoveWord,\r\n\t};\r\n\r\n\t// update word popup props\r\n\tconst popupProps = {\r\n\t\tinfoFunc: {\r\n\t\t\ttitle: `Update the word ${wordData.word}`,\r\n\t\t\tisOpen: updateModalOpen,\r\n\t\t},\r\n\t\tcloseHandle: handleTogglePopup,\r\n\t\tmaxWidth: \"sm\",\r\n\t\tdividers: true,\r\n\t};\r\n\r\n\t// Button props\r\n\tconst btnProps = (icon, onClickHandler) => ({\r\n\t\tcolor: \"inherit\",\r\n\t\tsize: \"small\",\r\n\t\tonClick: onClickHandler,\r\n\t\tstartIcon: icon,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"mt-2 space-x-3 flex justify-center\">\r\n\t\t\t<IF condition={loggedUser !== \"no user\"}>\r\n\t\t\t\t{/* Delete Word */}\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"order-1\"\r\n\t\t\t\t\t{...btnProps(<TrashIcon className=\"h-5 text-red-500\" />, handleConfirmDeleteWordOpen)}\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t{/* update Word */}\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"order-3\"\r\n\t\t\t\t\t{...btnProps(<TrashIcon className=\"h-5 text-blue-700\" />, handleTogglePopup)}\r\n\t\t\t\t>\r\n\t\t\t\t\tEdit\r\n\t\t\t\t</Button>\r\n\t\t\t</IF>\r\n\r\n\t\t\t{/* Show Word's image */}\r\n\t\t\t<Button\r\n\t\t\t\tclassName=\"order-2\"\r\n\t\t\t\t{...btnProps(<PhotographIcon className=\"h-5 text-green-600\" />, handleShowImage)}\r\n\t\t\t>\r\n\t\t\t\tShow {wordImage !== \"\" ? \"Def\" : \"Image\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t{/* Update word popup */}\r\n\t\t\t<PopUp {...popupProps}>\r\n\t\t\t\t<WordForm\r\n\t\t\t\t\twordDocId={id}\r\n\t\t\t\t\taction=\"update\"\r\n\t\t\t\t\twordData={wordData}\r\n\t\t\t\t\thandleClosePopup={handleTogglePopup}\r\n\t\t\t\t/>\r\n\t\t\t</PopUp>\r\n\r\n\t\t\t{/* Confirm delete popup */}\r\n\t\t\t<ConfirmPopUp dialogFunc={deleteDialogFunc} onClose={handleConfirmDeleteWordOpen} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WordControls;\r\n","F:\\Projects\\eng-keep\\src\\common-components\\controls\\Controls.js",[],"F:\\Projects\\eng-keep\\src\\forms\\UserForm.js",[],"F:\\Projects\\eng-keep\\src\\hooks\\useForm.js",["286","287","288","289","290"],"import { useState } from \"react\";\r\n\r\nexport function useForm(initialValues, validationOnInput = true, validation) {\r\n\tconst [values, setValues] = useState(initialValues);\r\n\tconst [validationErrors, setErrors] = useState({});\r\n\r\n\t// handle inputs change\r\n\tconst handleInputsChange = (e) => {\r\n\t\tconst { value, name, checked } = e.target;\r\n\r\n\t\tsetValues((prev) => {\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\t[name]:\r\n\t\t\t\t\tname == \"isPermanent\" || name == \"isSeasoned\" || name == \"needMoreInfo\" ? checked : value,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tif (validationOnInput) {\r\n\t\t\tvalidation({ [name]: value }, setErrors);\r\n\t\t}\r\n\t};\r\n\r\n\t// reset form\r\n\tconst resetForm = (values = initialValues) => {\r\n\t\tsetValues(values);\r\n\t\tsetErrors({});\r\n\t};\r\n\r\n\t// input common props\r\n\tconst inputCommonProps = (label, name, value, error) => ({\r\n\t\tlabel,\r\n\t\tinputChange: handleInputsChange,\r\n\t\tvalue: value,\r\n\t\tname,\r\n\t\t...(error != undefined && error != \"\" ? { helperText: error, error: true } : {}),\r\n\t});\r\n\r\n\treturn {\r\n\t\tvalues,\r\n\t\tsetValues,\r\n\t\thandleInputsChange,\r\n\t\tvalidationErrors,\r\n\t\tsetErrors,\r\n\t\tresetForm,\r\n\t\tinputCommonProps,\r\n\t};\r\n}\r\n\r\nexport function Form(props) {\r\n\tconst { children, onSubmit, ...otherAttributes } = props;\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tonSubmit();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} {...otherAttributes}>\r\n\t\t\t{children}\r\n\t\t</form>\r\n\t);\r\n}\r\n","F:\\Projects\\eng-keep\\src\\common-components\\ui\\ConfirmPopUp.js",[],"F:\\Projects\\eng-keep\\src\\forms\\WordForm.js",["291"],"F:\\Projects\\eng-keep\\src\\common-components\\ui\\PopUp.js",["292"],"import React from \"react\";\r\n\r\n// material components\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grow, Fade } from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n// icons\r\nimport { XIcon as Close } from \"@heroicons/react/outline\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tdialog: {\r\n\t\tmaxWidth: 750,\r\n\t\tminWidth: 250,\r\n\t},\r\n\tdialogTitle: {\r\n\t\tpadding: \"20px 10px\",\r\n\r\n\t\t\"& h2\": {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tjustifyContent: \"space-between\",\r\n\t\t\talignItems: \"center\",\r\n\t\t},\r\n\t},\r\n\tcloseButton: {\r\n\t\tminWidth: 15,\r\n\t\tpadding: \"1px 4px !important\",\r\n\t},\r\n}));\r\n\r\nexport default function PopUp(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst {\r\n\t\tinfoFunc,\r\n\t\tcloseHandle,\r\n\t\tmaxWidth,\r\n\t\ttransCom = Grow,\r\n\t\tcontentStyles,\r\n\t\tdividers = false,\r\n\t\tchildren,\r\n\t} = props;\r\n\tconst { title, isOpen } = infoFunc;\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={isOpen}\r\n\t\t\tonClose={closeHandle}\r\n\t\t\tfullWidth\r\n\t\t\tmaxWidth={maxWidth}\r\n\t\t\tTransitionComponent={transCom}\r\n\t\t\tclasses={{ paperWidthSm: classes.dialog }}\r\n\t\t>\r\n\t\t\t{title && (\r\n\t\t\t\t<DialogTitle classes={{ root: classes.dialogTitle }}>\r\n\t\t\t\t\t<Typography gutterBottom={false}>{title}</Typography>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.closeButton}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tonClick={closeHandle}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Close className=\"h-5\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t)}\r\n\t\t\t<DialogContent dividers={dividers} className={contentStyles}>\r\n\t\t\t\t{children}\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","F:\\Projects\\eng-keep\\src\\common-components\\controls\\TextInput.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\controls\\SelectBoxInput.js",["293"],"// material imports\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n// icons\r\nimport { BadgeCheckIcon } from \"@heroicons/react/solid\";\r\n\r\nexport default function SelectBoxInput(props) {\r\n\tconst { inputChange, validationError, value, items, name, label } = props;\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\t{...(validationError && { error: true, helperText: validationError })}\r\n\t\t\tonChange={inputChange}\r\n\t\t\tname={name}\r\n\t\t\tfullWidth\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tlabel={label}\r\n\t\t\tselect\r\n\t\t\tmargin=\"dense\"\r\n\t\t\tsize=\"small\"\r\n\t\t\tvalue={value}\r\n\t\t>\r\n\t\t\t{items.map((item) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem key={item} value={item} style={{ textTransform: \"capitalize\" }}>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</TextField>\r\n\t);\r\n}\r\n","F:\\Projects\\eng-keep\\src\\common-components\\controls\\ReusableCheckBox.js",["294"],"import React from \"react\";\r\n\r\n// material components\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n// icons\r\n// import DoneAll from \"@material-ui/icons/DoneAll\"\r\n\r\nexport default function ReusableCheckBox(props) {\r\n\tconst { onChangeHandle, checkValue, label, name, checkedIcon, normalIcon } = props;\r\n\r\n\treturn (\r\n\t\t<FormGroup>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tonChange={onChangeHandle}\r\n\t\t\t\tchecked={checkValue}\r\n\t\t\t\tlabel={label}\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox color=\"primary\" name={name} /* icon={normalIcon} */ checkedIcon={checkedIcon} />\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</FormGroup>\r\n\t);\r\n}\r\n","F:\\Projects\\eng-keep\\src\\common-components\\controls\\RadioGroup.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\controls\\FilePondCircular.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\controls\\Toggler.tsx",[],["295","296"],"F:\\Projects\\eng-keep\\src\\common-components\\ui\\form-list\\FormList.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\ui\\form-list\\ItemForm.js",["297","298","299","300"],"import { useEffect, useRef, useState } from \"react\";\r\n\r\n// UI\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport Controls from \"../../controls/Controls\";\r\n\r\n// Icons\r\nimport { TrashIcon } from \"@heroicons/react/outline\";\r\n\r\n// Hooks\r\nimport { Form } from \"../../hooks/useForm\";\r\n\r\n// Components\r\nimport SpeechToText from \"../../controls/SpeechToText\";\r\n\r\nfunction ItemForm({ handleUpdate, handleDelete, label, value, lastNewAddedFormId }) {\r\n\tconst formInputRef = useRef();\r\n\r\n\t// State vars\r\n\tconst [inputValue, setInputValue] = useState(value.body);\r\n\r\n\t// Import SpeechToText component to add add the ability to say the items\r\n\tconst { handleStartStopListening, text: result, listeningIcon } = SpeechToText();\r\n\r\n\tuseEffect(() => {\r\n\t\t// Add a condition not to set inputValue on load\r\n\t\tif (result != \"\") {\r\n\t\t\t// update the input value\r\n\t\t\tsetInputValue(result);\r\n\r\n\t\t\t// update it on state\r\n\t\t\thandleUpdate(value.id, result);\r\n\t\t}\r\n\t}, [result]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// handle focus the last added new form's input\r\n\t\tif (lastNewAddedFormId === value.id) {\r\n\t\t\tformInputRef.current.querySelector(\"input\").focus();\r\n\t\t}\r\n\t}, [lastNewAddedFormId]);\r\n\r\n\t// Handle delete the form item\r\n\tconst handleDeleteItem = () => {\r\n\t\t// Stop the mic if is already starting\r\n\t\thandleStartStopListening();\r\n\t\thandleDelete(value.id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form className=\"flex items-center space-x-3\">\r\n\t\t\t<Controls.TextInput\r\n\t\t\t\tinputRef={formInputRef}\r\n\t\t\t\tinputChange={(e) => {\r\n\t\t\t\t\thandleUpdate(value.id, e.target.value);\r\n\t\t\t\t\tsetInputValue(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tlabel={label}\r\n\t\t\t/>\r\n\r\n\t\t\t<div className=\"flex\">\r\n\t\t\t\t{/* button for focus state */}\r\n\t\t\t\t<IconButton onClick={handleStartStopListening} color=\"primary\" size=\"small\">\r\n\t\t\t\t\t{listeningIcon}\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<IconButton onClick={handleDeleteItem} size=\"small\">\r\n\t\t\t\t\t<TrashIcon className=\"h-6 cursor-pointer text-red-600 \" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Form>\r\n\t);\r\n}\r\n\r\nexport default ItemForm;\r\n","F:\\Projects\\eng-keep\\src\\common-components\\controls\\SpeechToText.js",["301","302"],"import { useEffect, useState } from \"react\";\r\n\r\n// Icons\r\nimport { MicrophoneIcon, StopIcon } from \"@heroicons/react/outline\";\r\n\r\n// Voice recognition setup\r\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\nconst mic = new speechRecognition();\r\nmic.continuous = true;\r\nmic.interimResults = true;\r\n\r\nfunction SpeechToText() {\r\n\tconst [isListening, setListening] = useState(false);\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [result, setResult] = useState(\"\");\r\n\r\n\tconst handleListen = () => {\r\n\t\tif (isListening) {\r\n\t\t\tmic.start();\r\n\t\t\tmic.onend = () => {\r\n\t\t\t\tmic.start();\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tmic.stop();\r\n\t\t\tmic.onend = () => {\r\n\t\t\t\tsetResult(text);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tmic.onresult = (event) => {\r\n\t\t\tconst transcript = Array.from(event.results)\r\n\t\t\t\t.map((result) => result[0])\r\n\t\t\t\t.map((result) => result.transcript)\r\n\t\t\t\t.join(\"\");\r\n\t\t\tsetText(transcript);\r\n\t\t\tmic.onerror = (event) => {};\r\n\t\t};\r\n\t};\r\n\r\n\tconst handleStartStopListening = () => {\r\n\t\tsetListening((prev) => !prev);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\thandleListen();\r\n\t}, [isListening]);\r\n\r\n\t// listening status icons\r\n\tconst listeningIcon = isListening ? (\r\n\t\t<StopIcon className=\"h-6 text-red-500\" />\r\n\t) : (\r\n\t\t<MicrophoneIcon className=\"h-6 \" />\r\n\t);\r\n\r\n\treturn {\r\n\t\thandleStartStopListening,\r\n\t\ttext,\r\n\t\tisListening,\r\n\t\tlisteningIcon,\r\n\t};\r\n}\r\n\r\nexport default SpeechToText;\r\n","F:\\Projects\\eng-keep\\src\\common-components\\hooks\\useForm.js",["303","304","305","306"],"import React, { useState } from 'react'\r\n\r\n\r\nexport function useForm(initialValues, validationOnInput = true, validation) {\r\n    const [values, setValues] = useState(initialValues)\r\n    const [validationErrors, setErrors] = useState({})\r\n\r\n    // handle inputs change\r\n    const handleInputsChange = (e) => {\r\n        const { value, name, checked } = e.target;\r\n\r\n        setValues((prev) => {\r\n            return {\r\n                ...prev, [name]: name == \"isPermanent\" || name == \"isSeasoned\" ? checked : value\r\n            }\r\n        })\r\n\r\n        if (validationOnInput) {\r\n            validation({ [name]: value }, setErrors)\r\n        }\r\n    }\r\n\r\n    // reset form\r\n    const resetForm = (values = initialValues) => {\r\n        setValues(values)\r\n        setErrors({})\r\n    }\r\n\r\n    // input common props\r\n    const inputCommonProps = (label, name, value, error) => ({\r\n        label,\r\n        onChange: handleInputsChange,\r\n        value: value,\r\n        name,\r\n        ...(error != undefined && error != \"\" ? { helperText: error, error: true } : {})\r\n    })\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        handleInputsChange,\r\n        validationErrors,\r\n        setErrors,\r\n        resetForm,\r\n        inputCommonProps\r\n    }\r\n}\r\n\r\nexport function Form(props) {\r\n    const { children, ...otherAttributes } = props\r\n\r\n    return (\r\n        <form {...otherAttributes}>\r\n            {children}\r\n        </form>\r\n    )\r\n}","F:\\Projects\\eng-keep\\src\\common-components\\controls\\PasswordInput.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\controls\\FilePondUploader.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\controls\\TextArea.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\controls\\SearchBox.js",[],"F:\\Projects\\eng-keep\\src\\common-components\\ui\\CustomMenuList.js",["307","308","309","310","311","312"],"import { useEffect, useRef } from \"react\";\r\nimport { MenuList, makeStyles, ClickAwayListener, Paper, Grow, Popper } from \"@material-ui/core\";\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpopper: {\r\n\t\t// top: \"19px !important\",\r\n\t},\r\n}));\r\n\r\nexport default function MenuListCom(props) {\r\n\t// destructuring props\r\n\tconst { anchorEl, handleClose, open, placement = \"top-end\", popperClassName, children } = props;\r\n\tconst classes = useStyles();\r\n\r\n\tconst popperProps = {\r\n\t\topen: open != undefined ? open : Boolean(anchorEl),\r\n\t\tanchorEl: anchorEl,\r\n\t\ttransition: true,\r\n\t\tclassName: `${classes.popper} ${popperClassName}`,\r\n\t\tplacement,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Popper {...popperProps}>\r\n\t\t\t<Grow in={open || Boolean(anchorEl)}>\r\n\t\t\t\t<Paper elevation={3}>{children}</Paper>\r\n\t\t\t</Grow>\r\n\t\t</Popper>\r\n\t);\r\n}\r\n","F:\\Projects\\eng-keep\\src\\hooks\\useWindowWidth.js",["313"],"F:\\Projects\\eng-keep\\src\\components\\word-list\\WordSynonym.js",["314"],{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":46,"column":8,"nodeType":"321","messageId":"322","endLine":46,"endColumn":18},{"ruleId":"323","severity":1,"message":"324","line":36,"column":35,"nodeType":"325","messageId":"326","endLine":36,"endColumn":37},{"ruleId":"319","severity":1,"message":"327","line":4,"column":23,"nodeType":"321","messageId":"322","endLine":4,"endColumn":33},{"ruleId":"328","severity":1,"message":"329","line":62,"column":8,"nodeType":"330","endLine":62,"endColumn":81},{"ruleId":"323","severity":1,"message":"324","line":105,"column":66,"nodeType":"325","messageId":"326","endLine":105,"endColumn":68},{"ruleId":"331","severity":1,"message":"332","line":152,"column":5,"nodeType":"333","endLine":152,"endColumn":37,"suggestions":"334"},{"ruleId":"331","severity":1,"message":"335","line":176,"column":5,"nodeType":"333","endLine":176,"endColumn":15,"suggestions":"336"},{"ruleId":"331","severity":1,"message":"337","line":35,"column":3,"nodeType":"333","endLine":35,"endColumn":17,"suggestions":"338"},{"ruleId":"331","severity":1,"message":"339","line":58,"column":3,"nodeType":"333","endLine":58,"endColumn":17,"suggestions":"340"},{"ruleId":"331","severity":1,"message":"341","line":90,"column":5,"nodeType":"333","endLine":90,"endColumn":17,"suggestions":"342"},{"ruleId":"323","severity":1,"message":"324","line":18,"column":35,"nodeType":"325","messageId":"326","endLine":18,"endColumn":37},{"ruleId":"319","severity":1,"message":"343","line":42,"column":10,"nodeType":"321","messageId":"322","endLine":42,"endColumn":21},{"ruleId":"319","severity":1,"message":"344","line":7,"column":30,"nodeType":"321","messageId":"322","endLine":7,"endColumn":37},{"ruleId":"319","severity":1,"message":"345","line":37,"column":21,"nodeType":"321","messageId":"322","endLine":37,"endColumn":34},{"ruleId":"323","severity":1,"message":"346","line":225,"column":32,"nodeType":"325","messageId":"326","endLine":225,"endColumn":34},{"ruleId":"319","severity":1,"message":"347","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":13},{"ruleId":"319","severity":1,"message":"348","line":3,"column":27,"nodeType":"321","messageId":"322","endLine":3,"endColumn":32},{"ruleId":"319","severity":1,"message":"349","line":4,"column":38,"nodeType":"321","messageId":"322","endLine":4,"endColumn":51},{"ruleId":"331","severity":1,"message":"350","line":66,"column":5,"nodeType":"333","endLine":66,"endColumn":26,"suggestions":"351"},{"ruleId":"319","severity":1,"message":"352","line":1,"column":28,"nodeType":"321","messageId":"322","endLine":1,"endColumn":37},{"ruleId":"323","severity":1,"message":"324","line":14,"column":16,"nodeType":"325","messageId":"326","endLine":14,"endColumn":18},{"ruleId":"353","severity":1,"message":"354","line":46,"column":27,"nodeType":"355","messageId":"356","endLine":46,"endColumn":28,"suggestions":"357"},{"ruleId":"353","severity":1,"message":"358","line":52,"column":20,"nodeType":"355","messageId":"356","endLine":52,"endColumn":21,"suggestions":"359"},{"ruleId":"353","severity":1,"message":"358","line":52,"column":73,"nodeType":"355","messageId":"356","endLine":52,"endColumn":74,"suggestions":"360"},{"ruleId":"323","severity":1,"message":"324","line":79,"column":23,"nodeType":"325","messageId":"326","endLine":79,"endColumn":25},{"ruleId":"323","severity":1,"message":"324","line":86,"column":54,"nodeType":"325","messageId":"326","endLine":86,"endColumn":56},{"ruleId":"319","severity":1,"message":"361","line":14,"column":8,"nodeType":"321","messageId":"322","endLine":14,"endColumn":15},{"ruleId":"319","severity":1,"message":"362","line":21,"column":10,"nodeType":"321","messageId":"322","endLine":21,"endColumn":23},{"ruleId":"323","severity":1,"message":"324","line":50,"column":31,"nodeType":"325","messageId":"326","endLine":50,"endColumn":33},{"ruleId":"323","severity":1,"message":"346","line":62,"column":17,"nodeType":"325","messageId":"326","endLine":62,"endColumn":19},{"ruleId":"331","severity":1,"message":"363","line":52,"column":5,"nodeType":"333","endLine":52,"endColumn":20,"suggestions":"364"},{"ruleId":"323","severity":1,"message":"346","line":31,"column":29,"nodeType":"325","messageId":"326","endLine":31,"endColumn":31},{"ruleId":"323","severity":1,"message":"346","line":42,"column":16,"nodeType":"325","messageId":"326","endLine":42,"endColumn":18},{"ruleId":"323","severity":1,"message":"346","line":49,"column":14,"nodeType":"325","messageId":"326","endLine":49,"endColumn":16},{"ruleId":"331","severity":1,"message":"365","line":26,"column":5,"nodeType":"333","endLine":26,"endColumn":16,"suggestions":"366"},{"ruleId":"331","severity":1,"message":"367","line":31,"column":5,"nodeType":"333","endLine":31,"endColumn":15,"suggestions":"368"},{"ruleId":"319","severity":1,"message":"369","line":8,"column":10,"nodeType":"321","messageId":"322","endLine":8,"endColumn":20},{"ruleId":"323","severity":1,"message":"324","line":15,"column":11,"nodeType":"325","messageId":"326","endLine":15,"endColumn":13},{"ruleId":"323","severity":1,"message":"324","line":15,"column":36,"nodeType":"325","messageId":"326","endLine":15,"endColumn":38},{"ruleId":"323","severity":1,"message":"324","line":15,"column":60,"nodeType":"325","messageId":"326","endLine":15,"endColumn":62},{"ruleId":"323","severity":1,"message":"346","line":36,"column":13,"nodeType":"325","messageId":"326","endLine":36,"endColumn":15},{"ruleId":"323","severity":1,"message":"346","line":36,"column":35,"nodeType":"325","messageId":"326","endLine":36,"endColumn":37},{"ruleId":"323","severity":1,"message":"324","line":110,"column":20,"nodeType":"325","messageId":"326","endLine":110,"endColumn":22},{"ruleId":"319","severity":1,"message":"370","line":9,"column":16,"nodeType":"321","messageId":"322","endLine":9,"endColumn":20},{"ruleId":"319","severity":1,"message":"371","line":6,"column":10,"nodeType":"321","messageId":"322","endLine":6,"endColumn":24},{"ruleId":"319","severity":1,"message":"372","line":12,"column":64,"nodeType":"321","messageId":"322","endLine":12,"endColumn":74},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"373","line":4,"column":10,"nodeType":"321","messageId":"322","endLine":4,"endColumn":16},{"ruleId":"323","severity":1,"message":"346","line":27,"column":14,"nodeType":"325","messageId":"326","endLine":27,"endColumn":16},{"ruleId":"331","severity":1,"message":"374","line":34,"column":5,"nodeType":"333","endLine":34,"endColumn":13,"suggestions":"375"},{"ruleId":"331","severity":1,"message":"376","line":41,"column":5,"nodeType":"333","endLine":41,"endColumn":25,"suggestions":"377"},{"ruleId":"319","severity":1,"message":"378","line":16,"column":9,"nodeType":"321","messageId":"322","endLine":16,"endColumn":15},{"ruleId":"331","severity":1,"message":"379","line":47,"column":5,"nodeType":"333","endLine":47,"endColumn":18,"suggestions":"380"},{"ruleId":"323","severity":1,"message":"324","line":14,"column":39,"nodeType":"325","messageId":"326","endLine":14,"endColumn":41},{"ruleId":"323","severity":1,"message":"324","line":14,"column":64,"nodeType":"325","messageId":"326","endLine":14,"endColumn":66},{"ruleId":"323","severity":1,"message":"346","line":35,"column":19,"nodeType":"325","messageId":"326","endLine":35,"endColumn":21},{"ruleId":"323","severity":1,"message":"346","line":35,"column":41,"nodeType":"325","messageId":"326","endLine":35,"endColumn":43},{"ruleId":"319","severity":1,"message":"352","line":1,"column":10,"nodeType":"321","messageId":"322","endLine":1,"endColumn":19},{"ruleId":"319","severity":1,"message":"381","line":1,"column":21,"nodeType":"321","messageId":"322","endLine":1,"endColumn":27},{"ruleId":"319","severity":1,"message":"382","line":2,"column":10,"nodeType":"321","messageId":"322","endLine":2,"endColumn":18},{"ruleId":"319","severity":1,"message":"383","line":2,"column":32,"nodeType":"321","messageId":"322","endLine":2,"endColumn":49},{"ruleId":"319","severity":1,"message":"384","line":13,"column":20,"nodeType":"321","messageId":"322","endLine":13,"endColumn":31},{"ruleId":"323","severity":1,"message":"346","line":17,"column":14,"nodeType":"325","messageId":"326","endLine":17,"endColumn":16},{"ruleId":"331","severity":1,"message":"385","line":8,"column":19,"nodeType":"321","endLine":8,"endColumn":30},{"ruleId":"331","severity":1,"message":"386","line":29,"column":5,"nodeType":"333","endLine":29,"endColumn":7,"suggestions":"387"},"no-native-reassign",["388"],"no-negated-in-lhs",["389"],"no-unused-vars","'loggedUser' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleGetWholeWordList', 'handleGetWordListByDate', 'handleGetWordListOnCategory', 'limit', and 'routerLocation.pathname'. Either include them or remove the dependency array.","ArrayExpression",["390"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["391"],"React Hook useCallback has a missing dependency: 'handleAddWord'. Either include it or remove the dependency array.",["392"],"React Hook useCallback has a missing dependency: 'loggedUser.id'. Either include it or remove the dependency array.",["393"],"React Hook useEffect has a missing dependency: 'alanInstance'. Either include it or remove the dependency array.",["394"],"'windowWidth' is assigned a value but never used.","'storage' is defined but never used.","'setItemsCount' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Fab' is defined but never used.","'Slide' is defined but never used.","'SpeedDialIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'wordListRef'. Either include it or remove the dependency array. Mutable values like 'wordListRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["395"],"'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["396","397"],"Unnecessary escape character: \\+.",["398","399"],["400","401"],"'useAlan' is defined but never used.","'createElement' is defined but never used.","React Hook useEffect has a missing dependency: 'isCustomDate'. Either include it or remove the dependency array.",["402"],"React Hook useEffect has a missing dependency: 'handleRefreshSentences'. Either include it or remove the dependency array.",["403"],"React Hook useEffect has a missing dependency: 'handleRefreshSynonyms'. Either include it or remove the dependency array.",["404"],"'PencilIcon' is defined but never used.","'Fade' is defined but never used.","'BadgeCheckIcon' is defined but never used.","'normalIcon' is assigned a value but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'handleUpdate' and 'value.id'. Either include them or remove the dependency array. If 'handleUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["405"],"React Hook useEffect has a missing dependency: 'value.id'. Either include it or remove the dependency array.",["406"],"'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleListen'. Either include it or remove the dependency array.",["407"],"'useRef' is defined but never used.","'MenuList' is defined but never used.","'ClickAwayListener' is defined but never used.","'handleClose' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'body' and 'wordDicAbility'. Either include them or remove the dependency array.",["408"],"no-global-assign","no-unsafe-negation",{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"messageId":"421","fix":"422","desc":"423"},{"messageId":"424","fix":"425","desc":"426"},{"messageId":"421","fix":"427","desc":"423"},{"messageId":"424","fix":"428","desc":"426"},{"messageId":"421","fix":"429","desc":"423"},{"messageId":"424","fix":"430","desc":"426"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},"Update the dependencies array to be: [currentTab, period, loggedUser, routerLocation.pathname, handleGetWordListByDate, limit, handleGetWordListOnCategory, handleGetWholeWordList]",{"range":"445","text":"446"},"Update the dependencies array to be: [query, wordList]",{"range":"447","text":"448"},"Update the dependencies array to be: [handleAddWord]",{"range":"449","text":"450"},"Update the dependencies array to be: [alanInstance, loggedUser.id]",{"range":"451","text":"452"},"Update the dependencies array to be: [alanInstance, loggedUser]",{"range":"453","text":"454"},"Update the dependencies array to be: [wordListRef]",{"range":"455","text":"456"},"removeEscape",{"range":"457","text":"458"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"459","text":"460"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"461","text":"458"},{"range":"462","text":"460"},{"range":"463","text":"458"},{"range":"464","text":"460"},"Update the dependencies array to be: [currentPeriod, isCustomDate]",{"range":"465","text":"466"},"Update the dependencies array to be: [handleRefreshSentences, sentences]",{"range":"467","text":"468"},"Update the dependencies array to be: [handleRefreshSynonyms, synonyms]",{"range":"469","text":"470"},"Update the dependencies array to be: [handleUpdate, result, value.id]",{"range":"471","text":"472"},"Update the dependencies array to be: [lastNewAddedFormId, value.id]",{"range":"473","text":"474"},"Update the dependencies array to be: [handleListen, isListening]",{"range":"475","text":"476"},"Update the dependencies array to be: [body, wordDicAbility]",{"range":"477","text":"478"},[4266,4298],"[currentTab, period, loggedUser, routerLocation.pathname, handleGetWordListByDate, limit, handleGetWordListOnCategory, handleGetWholeWordList]",[4920,4930],"[query, wordList]",[908,922],"[handleAddWord]",[1600,1614],"[alanInstance, loggedUser.id]",[2450,2462],"[alanInstance, loggedUser]",[1746,1767],"[wordListRef]",[1239,1240],"",[1239,1239],"\\",[1535,1536],[1535,1535],[1588,1589],[1588,1588],[1528,1543],"[currentPeriod, isCustomDate]",[732,743],"[handleRefreshSentences, sentences]",[817,827],"[handleRefreshSynonyms, synonyms]",[955,963],"[handleUpdate, result, value.id]",[1148,1168],"[lastNewAddedFormId, value.id]",[1082,1095],"[handleListen, isListening]",[692,694],"[body, wordDicAbility]"]