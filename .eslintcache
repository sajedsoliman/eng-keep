[{"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\index.js":"1","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\App.js":"2","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\redux\\store.js":"3","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\contexts\\UserContext.js":"4","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\contexts\\NotificationContext.js":"5","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\styles\\theme.js":"6","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\hooks\\useAlan.js":"7","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\EngKeep.js":"8","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\single-word\\SingleWord.js":"9","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\redux\\reducers\\globals.js":"10","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\back-ends\\database.js":"11","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\NotificationSnackbar.js":"12","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\back-ends\\Store.js":"13","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\HomepageTabs.js":"14","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\AddWordToggler.js":"15","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\helpers\\functions.js":"16","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\helpers\\info.js":"17","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\router\\UnAuthRoute.js":"18","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\util\\IF.js":"19","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\header\\Header.js":"20","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordList.js":"21","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\SearchBar.js":"22","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordCard.js":"23","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\pages\\auth\\Login.js":"24","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\pages\\auth\\Register.js":"25","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\back-ends\\HelperFunctions.js":"26","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\PeriodMenu.js":"27","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\forms\\WordForm.js":"28","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordSynonyms.js":"29","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordCardHeader.js":"30","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordControls.js":"31","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordExamples.js":"32","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\Controls.js":"33","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\CustomMenuList.js":"34","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\ConfirmPopUp.js":"35","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\PopUp.js":"36","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\hooks\\useForm.js":"37","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\form-list\\FormList.js":"38","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\SelectBoxInput.js":"39","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\form-list\\ItemForm.js":"40","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\SpeechToText.js":"41","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\hooks\\useForm.js":"42","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\ReusableCheckBox.js":"43","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\PasswordInput.js":"44","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\RadioGroup.js":"45","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\TextArea.js":"46","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\SearchBox.js":"47","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\forms\\UserForm.js":"48","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\hooks\\useWindowWidth.js":"49","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\Toggler.tsx":"50","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\TextInput.tsx":"51","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\ScrollTopButton.js":"52","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\FilePondCircular.js":"53","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\FilePondUploader.js":"54","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\AppControls.js":"55"},{"size":945,"mtime":1624947475415,"results":"56","hashOfConfig":"57"},{"size":1299,"mtime":1625548724863,"results":"58","hashOfConfig":"57"},{"size":227,"mtime":1624767996263,"results":"59","hashOfConfig":"57"},{"size":1095,"mtime":1624767996256,"results":"60","hashOfConfig":"57"},{"size":932,"mtime":1624767996255,"results":"61","hashOfConfig":"57"},{"size":171,"mtime":1624767996264,"results":"62","hashOfConfig":"57"},{"size":2825,"mtime":1625559089523,"results":"63","hashOfConfig":"57"},{"size":8338,"mtime":1625553090315,"results":"64","hashOfConfig":"57"},{"size":2148,"mtime":1624773430846,"results":"65","hashOfConfig":"57"},{"size":385,"mtime":1624767996262,"results":"66","hashOfConfig":"57"},{"size":655,"mtime":1624767996233,"results":"67","hashOfConfig":"57"},{"size":798,"mtime":1624767996245,"results":"68","hashOfConfig":"57"},{"size":7106,"mtime":1624767996232,"results":"69","hashOfConfig":"57"},{"size":2008,"mtime":1624767996249,"results":"70","hashOfConfig":"57"},{"size":1639,"mtime":1625553673414,"results":"71","hashOfConfig":"57"},{"size":2995,"mtime":1624767996258,"results":"72","hashOfConfig":"57"},{"size":1819,"mtime":1624767996258,"results":"73","hashOfConfig":"57"},{"size":511,"mtime":1624768658142,"results":"74","hashOfConfig":"57"},{"size":132,"mtime":1624767996247,"results":"75","hashOfConfig":"57"},{"size":2238,"mtime":1625550388481,"results":"76","hashOfConfig":"57"},{"size":1615,"mtime":1624767996254,"results":"77","hashOfConfig":"57"},{"size":383,"mtime":1624774184270,"results":"78","hashOfConfig":"57"},{"size":3024,"mtime":1624767996253,"results":"79","hashOfConfig":"57"},{"size":1144,"mtime":1624767996261,"results":"80","hashOfConfig":"57"},{"size":1501,"mtime":1624772845687,"results":"81","hashOfConfig":"57"},{"size":3185,"mtime":1624767996232,"results":"82","hashOfConfig":"57"},{"size":2653,"mtime":1624772598422,"results":"83","hashOfConfig":"57"},{"size":4718,"mtime":1625548551049,"results":"84","hashOfConfig":"57"},{"size":1941,"mtime":1624767996255,"results":"85","hashOfConfig":"57"},{"size":1593,"mtime":1624948182987,"results":"86","hashOfConfig":"57"},{"size":2727,"mtime":1624767996254,"results":"87","hashOfConfig":"57"},{"size":1803,"mtime":1624949298054,"results":"88","hashOfConfig":"57"},{"size":648,"mtime":1625144988610,"results":"89","hashOfConfig":"57"},{"size":816,"mtime":1624767996244,"results":"90","hashOfConfig":"57"},{"size":1710,"mtime":1624767996244,"results":"91","hashOfConfig":"57"},{"size":1759,"mtime":1624767996245,"results":"92","hashOfConfig":"57"},{"size":1378,"mtime":1624767996259,"results":"93","hashOfConfig":"57"},{"size":2357,"mtime":1624767996246,"results":"94","hashOfConfig":"57"},{"size":789,"mtime":1624861402496,"results":"95","hashOfConfig":"57"},{"size":2021,"mtime":1624948898823,"results":"96","hashOfConfig":"57"},{"size":1391,"mtime":1625150172521,"results":"97","hashOfConfig":"57"},{"size":1437,"mtime":1624767996242,"results":"98","hashOfConfig":"57"},{"size":708,"mtime":1624767996238,"results":"99","hashOfConfig":"57"},{"size":1260,"mtime":1624767996238,"results":"100","hashOfConfig":"57"},{"size":921,"mtime":1624767996238,"results":"101","hashOfConfig":"57"},{"size":684,"mtime":1624767996240,"results":"102","hashOfConfig":"57"},{"size":1202,"mtime":1624767996239,"results":"103","hashOfConfig":"57"},{"size":2060,"mtime":1624772827478,"results":"104","hashOfConfig":"57"},{"size":648,"mtime":1624767996260,"results":"105","hashOfConfig":"57"},{"size":703,"mtime":1624767996241,"results":"106","hashOfConfig":"57"},{"size":559,"mtime":1624767996240,"results":"107","hashOfConfig":"57"},{"size":1280,"mtime":1625553711923,"results":"108","hashOfConfig":"57"},{"size":1478,"mtime":1624767996237,"results":"109","hashOfConfig":"57"},{"size":1253,"mtime":1624772809559,"results":"110","hashOfConfig":"57"},{"size":3358,"mtime":1625558972478,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1qt7s79",{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"114"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\index.js",[],["252","253"],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\App.js",["254","255"],"// Hooks\r\nimport useAlan from \"./hooks/useAlan\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"./contexts/UserContext\";\r\n\r\n// Components\r\nimport EngKeep from \"./components/EngKeep\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SingleWord from \"./components/single-word/SingleWord\";\r\n\r\n// now i can use this site map in links\r\nexport const siteMap = {\r\n\tSingleWord: {\r\n\t\tpath: \"/words/:word\",\r\n\t\tdescription: \"The full word page that shows it fullscreen\",\r\n\t},\r\n\tHomePage: {\r\n\t\tpath: \"/\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"contains all words and tabs\",\r\n\t},\r\n\tNewWordsPage: {\r\n\t\tpath: \"/new-words\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"contains all words under the (new words) category\",\r\n\t},\r\n\tProperlyPronunciationWordsPage: {\r\n\t\tpath: \"/properly-pronunciation-words\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"contains all words under the (to-properly-pronunciation words) category\",\r\n\t},\r\n\tSignin: {\r\n\t\tpath: \"/signin\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"Login page\",\r\n\t},\r\n\tRegister: {\r\n\t\tpath: \"/register\",\r\n\t\ttitle: \"EngKeep\",\r\n\t\tdescription: \"register page\",\r\n\t},\r\n};\r\n\r\nfunction App() {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/words/:word\">\r\n\t\t\t\t<SingleWord />\r\n\t\t\t</Route>\r\n\r\n\t\t\t<EngKeep />\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\redux\\store.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\contexts\\UserContext.js",["256"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../back-ends/database\";\r\n\r\nconst AuthedUserContext = React.createContext();\r\n\r\n// custom hook to access the user\r\nexport function AuthedUser() {\r\n\tconst context = useContext(AuthedUserContext);\r\n\tif (context === null || context === undefined)\r\n\t\tthrow new Error(\"AuthedUser must be used within a AuthedUserProvider\");\r\n\r\n\treturn context;\r\n}\r\n\r\nexport function AuthedUserProvider({ children }) {\r\n\tconst [authUser, setAuthUser] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tauth.onAuthStateChanged((authedUser) => {\r\n\t\t\tif (authedUser) {\r\n\t\t\t\tconst { displayName, email, uid, photoURL } = authedUser;\r\n\t\t\t\tconst user = {\r\n\t\t\t\t\tfullName: displayName,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tid: uid,\r\n\t\t\t\t\tavatar: photoURL,\r\n\t\t\t\t};\r\n\t\t\t\tsetAuthUser(user);\r\n\t\t\t} else {\r\n\t\t\t\t// if the user has logged out -> remove them\r\n\t\t\t\tsetAuthUser(\"no user\");\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\tif (authUser == null || authUser == undefined) return null;\r\n\treturn <AuthedUserContext.Provider value={authUser}>{children}</AuthedUserContext.Provider>;\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\contexts\\NotificationContext.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\styles\\theme.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\hooks\\useAlan.js",["257","258","259","260","261"],"import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../contexts/UserContext\";\r\n\r\n// Components\r\nimport Store from \"../back-ends/Store\";\r\nimport { db } from \"../back-ends/database\";\r\nimport { getDateOnPeriod } from \"../helpers/functions\";\r\n\r\nconst COMMANDS = {\r\n\tADD_WORD: \"add-word\",\r\n\tSAY_REVISION: \"say-revision\",\r\n};\r\n\r\nexport default function useAlan(container, open) {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// Import Store component to get data from the database\r\n\tconst { handleGetWordListByDate } = Store();\r\n\r\n\t// Refs\r\n\tconst alanBtnContainer = useRef();\r\n\r\n\tconst [alanInstance, setAlanInstance] = useState();\r\n\r\n\t// Import store component to handle adding new words\r\n\tconst { handleAddWord } = Store();\r\n\r\n\tconst addWord = useCallback(\r\n\t\t({ detail }) => {\r\n\t\t\tconst wordData = {\r\n\t\t\t\tcategory: detail.category.toLowerCase(),\r\n\t\t\t\tword: detail.word.toLowerCase(),\r\n\t\t\t\tsentences: [...detail.sentences],\r\n\t\t\t\tsynonyms: [],\r\n\t\t\t};\r\n\t\t\thandleAddWord(wordData);\r\n\t\t},\r\n\t\t[alanInstance]\r\n\t);\r\n\r\n\tconst sayRev = useCallback(\r\n\t\tasync ({ detail }) => {\r\n\t\t\t// Get today's words from Store component\r\n\t\t\tdb.collection(\"users\")\r\n\t\t\t\t.doc(loggedUser.id)\r\n\t\t\t\t.collection(\"user-words\")\r\n\t\t\t\t.where(\"timestamp\", \">=\", getDateOnPeriod(\"today\").startDate)\r\n\t\t\t\t.orderBy(\"timestamp\", \"asc\")\r\n\t\t\t\t.get()\r\n\t\t\t\t.then((snapshot) => {\r\n\t\t\t\t\tconst todays_words = snapshot.docs.map((doc) => doc.data());\r\n\t\t\t\t\ttodays_words.forEach((wordObj) => {\r\n\t\t\t\t\t\tconst wannaSayExample =\r\n\t\t\t\t\t\t\tdetail.wannaSayExample === \"yes\" ? `example: ${wordObj.sentences[0].body}` : \"\";\r\n\t\t\t\t\t\talanInstance.playText(`${wordObj.word}. ${wannaSayExample}`);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t[alanInstance]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(COMMANDS.ADD_WORD, addWord);\r\n\t\twindow.addEventListener(COMMANDS.SAY_REVISION, sayRev);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(COMMANDS.ADD_WORD, addWord);\r\n\t\t\twindow.removeEventListener(COMMANDS.SAY_REVISION, sayRev);\r\n\t\t};\r\n\t}, [addWord, sayRev]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Problem: when logged out it doesn't disappear\r\n\t\tif (loggedUser === \"no user\") {\r\n\t\t\tdocument.querySelector(\".alanBtn-root\")?.remove();\r\n\t\t\tsetAlanInstance(null);\r\n\t\t}\r\n\r\n\t\tif (loggedUser === \"no user\") return;\r\n\t\tif (open)\r\n\t\t\tsetAlanInstance(\r\n\t\t\t\talanBtn({\r\n\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tkey: process.env.REACT_APP_ALAN_KEY,\r\n\t\t\t\t\trootEl: document.querySelector(container),\r\n\t\t\t\t\tonCommand: ({ command, payload }) => {\r\n\t\t\t\t\t\twindow.dispatchEvent(new CustomEvent(command, { detail: payload }));\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\telse {\r\n\t\t\tsetAlanInstance(null);\r\n\t\t\tdocument.querySelector(container).innerHTML = \"\";\r\n\t\t}\r\n\t}, [loggedUser, open]);\r\n\r\n\treturn alanInstance;\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\EngKeep.js",["262","263","264"],"import { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\n\r\n// router\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport UnAuthRoute from \"../common-components/router/UnAuthRoute\";\r\n\r\n// UI\r\nimport { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport HomepageTabs from \"./HomepageTabs\";\r\n\r\n// Icons\r\nimport { ArrowDownIcon } from \"@heroicons/react/outline\";\r\n\r\n// Info (from helpers)\r\nimport {\r\n\tDEFAULT_WORD_LIST_LIMIT,\r\n\tPATHS,\r\n\thomepageTabs,\r\n\tNON_SEARCHABLE_PATHS,\r\n} from \"../helpers/info\";\r\n\r\n// Util\r\nimport IF from \"../common-components/util/IF\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../contexts/UserContext\";\r\n\r\n// Pages\r\nimport Register from \"../pages/auth/Register\";\r\nimport Login from \"../pages/auth/Login\";\r\n\r\n// Components\r\nimport Header from \"./header/Header\";\r\nimport Store from \"../back-ends/Store\";\r\nimport { WordList } from \"./word-list/WordList\";\r\nimport SearchBar from \"./word-list/SearchBar\";\r\nimport AppControls from \"./AppControls\";\r\n\r\n// Style\r\nconst useStyles = makeStyles((theme) => ({\r\n\t// word list section\r\n\twordListWrapper: {\r\n\t\tminHeight: \"calc(100vh - 48px)\" /* 48px - tabs' height */,\r\n\t\tmaxHeight: \"calc(100vh - 48px)\" /* 48px - tabs' height */,\r\n\t\theight: \"calc(100vh - 48px)\" /* 48px - tabs' height */,\r\n\t\toverflowY: \"auto\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t},\r\n\taddWordFormWrapper: {\r\n\t\t// minWidth: 700,\r\n\t},\r\n\tverticalMenuToggler: {\r\n\t\twidth: 64,\r\n\t\theight: 64,\r\n\t\t\"&:focus\": {\r\n\t\t\toutline: \"none\",\r\n\t\t},\r\n\t},\r\n\tverticalMenu: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\tpadding: 10,\r\n\t\tborderRadius: 15,\r\n\t},\r\n\talanBtnWrapper: {},\r\n}));\r\n\r\nexport default function EngKeep() {\r\n\tconst classes = useStyles();\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// Refs\r\n\tconst wordListRef = useRef();\r\n\r\n\t// Router\r\n\t// const history = useHistory();\r\n\tconst routerLocation = useLocation();\r\n\r\n\t// Set the tab depending on the current router path\r\n\tconst routerTab = homepageTabs.findIndex((tab) => tab.path === routerLocation.pathname);\r\n\r\n\t// State vars\r\n\tconst [currentTab, setCurrentTab] = useState(routerTab);\r\n\tconst [wordList, setWordList] = useState(null);\r\n\tconst [filteredWordList, setFilteredWordList] = useState([]);\r\n\tconst [period, setPeriod] = useState(\"today\");\r\n\tconst [limit, setLimit] = useState(DEFAULT_WORD_LIST_LIMIT);\r\n\tconst [query, setQuery] = useState(\"\");\r\n\r\n\t// Import Store component to fetch the word list\r\n\tconst { handleGetWordListOnCategory, handleGetWholeWordList, handleGetWordListByDate } = Store();\r\n\r\n\t// set a listener to get the last opened word (in localStorage) to scroll to it\r\n\tuseLayoutEffect(() => {\r\n\t\tconst lastScroll = localStorage.getItem(\"last-scroll\");\r\n\t\tconst lastLimit = localStorage.getItem(\"last-limit\");\r\n\t\tconst lastPeriod = localStorage.getItem(\"last-period\");\r\n\t\tconst inWordListPage = routerLocation.pathname.search(\"/word\") == -1;\r\n\t\tif (lastScroll !== null && inWordListPage) {\r\n\t\t\twordListRef.current.scroll({ top: lastScroll });\r\n\r\n\t\t\tif (lastLimit !== null) {\r\n\t\t\t\tsetLimit(parseInt(lastLimit));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.removeItem(\"last-scroll\");\r\n\t\t\t}\r\n\t\t\tif (lastPeriod === null) {\r\n\t\t\t\tlocalStorage.removeItem(\"last-limit\");\r\n\t\t\t}\r\n\t\t\tif (lastPeriod !== null) {\r\n\t\t\t\tsetPeriod(lastPeriod);\r\n\t\t\t\tlocalStorage.removeItem(\"last-period\");\r\n\t\t\t}\r\n\t\t}\r\n\t}, [routerLocation.pathname, filteredWordList, limit]);\r\n\r\n\t// Set a listener to track the current tab and fetch the apt data\r\n\tuseEffect(() => {\r\n\t\t// Don't call the api if there is no user\r\n\t\tif (loggedUser === \"no user\") return setWordList([]);\r\n\r\n\t\tconst currPath = routerLocation.pathname;\r\n\r\n\t\t// get tab's content depending on the current tab\r\n\t\tlet unsubscribe;\r\n\r\n\t\tif (currPath !== \"/\") {\r\n\t\t\t// Get the category depending on the current tab\r\n\t\t\tlet category = \"pronunciation\";\r\n\t\t\tif (currPath === \"/new-words\") category = \"new\";\r\n\r\n\t\t\tif (currPath === PATHS.BY_DATE) {\r\n\t\t\t\tunsubscribe = handleGetWordListByDate(limit, period, setWordList);\r\n\t\t\t} else {\r\n\t\t\t\tunsubscribe = handleGetWordListOnCategory(limit, category, setWordList);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tunsubscribe = handleGetWholeWordList(limit, setWordList);\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\t// Stop the onSnapshot listener as the current tab changes\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, [currentTab, period, loggedUser]);\r\n\r\n\t// Set a listener to reset the limit when the currTab or period gets changed\r\n\tuseEffect(() => {\r\n\t\t// Reset Search text (query)\r\n\t\tsetQuery(\"\");\r\n\r\n\t\t// Reset the limit\r\n\t\tif (localStorage.getItem(\"last-scroll\") === null) {\r\n\t\t\tsetLimit(DEFAULT_WORD_LIST_LIMIT);\r\n\t\t}\r\n\r\n\t\t// Scroll to the top\r\n\t\twordListRef.current.scroll(0, 0);\r\n\t}, [currentTab, period]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (wordList !== null) {\r\n\t\t\tconst wordRegex = new RegExp(query, \"i\");\r\n\t\t\tconst filteredList = wordList.filter((wordDoc) => wordDoc.word.word.search(wordRegex) !== -1);\r\n\t\t\tsetFilteredWordList(filteredList);\r\n\t\t}\r\n\t}, [wordList]);\r\n\r\n\t// handle change query\r\n\tconst handleChangeQuery = (e) => {\r\n\t\tconst value = e.target.value;\r\n\r\n\t\t// change the input value\r\n\t\tsetQuery(value);\r\n\r\n\t\t// startTransition the list value\r\n\t\tconst wordRegex = new RegExp(value, \"i\");\r\n\t\tconst filteredList = wordList.filter((wordDoc) => wordDoc.word.word.search(wordRegex) !== -1);\r\n\r\n\t\tsetFilteredWordList(filteredList);\r\n\t};\r\n\r\n\t// handle change the current tab\r\n\tconst handleChangeTab = (e, newTab) => {\r\n\t\tsetCurrentTab(newTab);\r\n\t};\r\n\r\n\t// Tabs component props\r\n\tconst tabsProps = {\r\n\t\tcurrentTab,\r\n\t\thandleChangeTab,\r\n\t\tisWrapped: true /* Decide wether the label of the tabs should wrap or not */,\r\n\t};\r\n\r\n\t// handle change period\r\n\tconst handleChangePeriod = (newPeriod) => {\r\n\t\tsetPeriod(newPeriod);\r\n\t};\r\n\r\n\t// user logged in condition\r\n\tconst isUserLogged = loggedUser !== \"no user\";\r\n\r\n\t// there are more results condition\r\n\tconst thereMore = limit < filteredWordList.length;\r\n\r\n\t// there are results\r\n\tconst haveResult = filteredWordList.length > 0;\r\n\r\n\t// search box display conditions\r\n\tconst isSearchDisplay =\r\n\t\tObject.values(PATHS).includes(routerLocation.pathname) &&\r\n\t\tisUserLogged &&\r\n\t\twordList?.length !== 0;\r\n\r\n\t// Word list component\r\n\tconst wordListComponent = (\r\n\t\t<WordList\r\n\t\t\tlistRef={wordListRef}\r\n\t\t\tlist={filteredWordList.slice(0, limit)}\r\n\t\t\tperiod={period}\r\n\t\t\tlimit={limit}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<main className=\"bg-gray-100 min-h-screen\">\r\n\t\t\t{/* App header for signin and register */}\r\n\t\t\t<Header />\r\n\r\n\t\t\t{/* App Tabs => done */}\r\n\t\t\t<HomepageTabs handleChangePeriod={handleChangePeriod} period={period} {...tabsProps} />\r\n\r\n\t\t\t{/* Each tab content depending on the current tab */}\r\n\t\t\t<Switch>\r\n\t\t\t\t<section ref={wordListRef} className={`${classes.wordListWrapper} p-4`}>\r\n\t\t\t\t\t{/* A message to display if the user is not logged in */}\r\n\t\t\t\t\t<IF\r\n\t\t\t\t\t\tcondition={\r\n\t\t\t\t\t\t\t!isUserLogged &&\r\n\t\t\t\t\t\t\t// This condition is to hide the search bar in signin & register pages\r\n\t\t\t\t\t\t\t!Object.values(NON_SEARCHABLE_PATHS).includes(routerLocation.pathname)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h2 className=\"font-medium text-lg text-center\">Log in to add &amp; see words</h2>\r\n\t\t\t\t\t</IF>\r\n\r\n\t\t\t\t\t{/* Search Box - if the path is anything but word-listed tabs (all, new, pronunciation) */}\r\n\t\t\t\t\t{/* Anything but a single word page */}\r\n\t\t\t\t\t<IF condition={isSearchDisplay}>\r\n\t\t\t\t\t\t<SearchBar query={query} handleChangeQuery={handleChangeQuery} />\r\n\t\t\t\t\t</IF>\r\n\r\n\t\t\t\t\t{/* a switch to move between tabs */}\r\n\r\n\t\t\t\t\t<Route path=\"/\" exact>\r\n\t\t\t\t\t\t{wordListComponent}\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<UnAuthRoute path=\"/register\">\r\n\t\t\t\t\t\t<Register />\r\n\t\t\t\t\t</UnAuthRoute>\r\n\r\n\t\t\t\t\t<UnAuthRoute path=\"/signin\">\r\n\t\t\t\t\t\t<Login />\r\n\t\t\t\t\t</UnAuthRoute>\r\n\r\n\t\t\t\t\t<Route path=\"/:id\" exact>\r\n\t\t\t\t\t\t{wordListComponent}\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t{/* Load more button */}\r\n\t\t\t\t\t<IF\r\n\t\t\t\t\t\tcondition={\r\n\t\t\t\t\t\t\t// The third condition is for single page\r\n\t\t\t\t\t\t\tthereMore && haveResult && Object.values(PATHS).includes(routerLocation.pathname)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t\t\t<IconButton onClick={() => setLimit((prev) => prev + DEFAULT_WORD_LIST_LIMIT)}>\r\n\t\t\t\t\t\t\t\t<ArrowDownIcon className=\"h-5 text-blue-600\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</IF>\r\n\t\t\t\t</section>\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* Controls - as a speed dial - add word, alanAI and scroll to top buttons  */}\r\n\t\t\t{isUserLogged && <AppControls wordListRef={wordListRef} />}\r\n\t\t</main>\r\n\t);\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\single-word\\SingleWord.js",["265","266"],"import { useState } from \"react\";\r\n\r\n// router\r\nimport { useLocation, useHistory, Redirect } from \"react-router-dom\";\r\n\r\n// UI\r\nimport { Grid, IconButton, makeStyles } from \"@material-ui/core\";\r\n\r\n// Util\r\nimport IF from \"../../common-components/util/IF\";\r\n\r\n// Components\r\nimport { RefreshIcon } from \"@heroicons/react/outline\";\r\nimport WordCard from \"../word-list/WordCard\";\r\n\r\n// Style\r\nconst useStyles = makeStyles((theme) => ({\r\n\timageGrid: {\r\n\t\tpadding: 0,\r\n\t},\r\n}));\r\n\r\nfunction SingleWord() {\r\n\tconst classes = useStyles();\r\n\r\n\t// Import router location to get the word object from the state\r\n\tconst location = useLocation();\r\n\tconst wordData = location.state?.wordData;\r\n\tconst id = location.state?.id;\r\n\r\n\t// State vars\r\n\tconst [randomImage, setRandomImage] = useState(wordData?.images[0]);\r\n\r\n\t// handle change the image (randomize it)\r\n\tconst handleRandomizeImage = () => {\r\n\t\tconst rand_image = wordData.images.sort(() => Math.random() - 0.5)[0];\r\n\t\tsetRandomImage(rand_image);\r\n\t};\r\n\r\n\t// a message to display if there is no image available for this word\r\n\tconst noImgMsg = <h3 className=\"text-center mt-2\">No image for this word</h3>;\r\n\r\n\t// if word does not exist then redirect to homepage\r\n\tif (!wordData) return <Redirect to=\"/\" />;\r\n\treturn (\r\n\t\t<div className=\"p-2 border space-x-2\">\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t<Grid item xs={12} md={7}>\r\n\t\t\t\t\t<WordCard id={id} wordData={wordData} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={5} className={`${classes.imageGrid}`}>\r\n\t\t\t\t\t<IF condition={Boolean(randomImage)} elseChildren={noImgMsg}>\r\n\t\t\t\t\t\t<div className=\"relative rounded-md overflow-hidden mt-2 h-72\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"rgba(0, 0, 0, .40)\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"w-full h-full inset-0 absolute z-10 flex items-center justify-center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<IconButton onClick={handleRandomizeImage}>\r\n\t\t\t\t\t\t\t\t\t<RefreshIcon className=\"h-6 text-white cursor-pointer\" />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<img src={randomImage} className=\"w-full h-full absolute object-cover\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</IF>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SingleWord;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\redux\\reducers\\globals.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\back-ends\\database.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\NotificationSnackbar.js",["267"],"import React from 'react'\r\n\r\n// material-ui imports\r\nimport { Snackbar, Slide } from \"@material-ui/core\"\r\nimport { Alert } from \"@material-ui/lab\"\r\n\r\n\r\nexport default function NotificationSnackbar(props) {\r\n    const { onClose, classValue, alertSeverity, notificationMsg } = props\r\n\r\n    return (\r\n        <Snackbar\r\n            disableWindowBlurListener\r\n            className={classValue}\r\n            ClickAwayListenerProps={{ mouseEvent: false }}\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n            TransitionComponent={Slide}\r\n            open={notificationMsg == \"\" ? false : true}\r\n            autoHideDuration={3000}\r\n            onClose={onClose} >\r\n\r\n            <Alert severity={alertSeverity}>{notificationMsg}</Alert>\r\n\r\n        </Snackbar>\r\n    )\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\back-ends\\Store.js",["268","269","270"],"import { useState } from \"react\";\r\n\r\n// Router\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Firebase\r\nimport { db, auth, firebase, storage } from \"./database\";\r\n\r\n// Helpers - info\r\nimport { dicApiReq } from \"../helpers/info\";\r\nimport Helpers from \"./HelperFunctions\";\r\nimport { getDateOnPeriod } from \"../helpers/functions\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../contexts/UserContext\";\r\nimport { useAlert } from \"../contexts/NotificationContext\";\r\n\r\nfunction Store() {\r\n\tconst loggedUser = AuthedUser();\r\n\tconst processSettings = useAlert();\r\n\r\n\t// Get the needed helpers function\r\n\tconst {\r\n\t\thandleGetImages,\r\n\t\thandleGetMoreWordInfo,\r\n\t\twordDicAbility,\r\n\t\taddUserToDb,\r\n\t\thandleUploadUserAvatar,\r\n\t\tisWordExisted,\r\n\t} = Helpers();\r\n\r\n\t// Router\r\n\tconst history = useHistory();\r\n\r\n\t// State vars\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [itemsCount, setItemsCount] = useState(null);\r\n\r\n\t// For logged user - start\r\n\t// Get the word list depending on the param (category) for now\r\n\tconst handleGetWordListOnCategory = (limit, category, setList) => {\r\n\t\tconst categoryQueryRef = db\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(loggedUser.id)\r\n\t\t\t.collection(\"user-words\")\r\n\t\t\t.where(\"category\", \"==\", category);\r\n\r\n\t\t// Get words available count\r\n\t\t/* categoryQueryRef.get().then((snapshot) => {\r\n\t\t\tsetItemsCount(snapshot.docs.length);\r\n\t\t}); */\r\n\r\n\t\treturn categoryQueryRef.orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) => {\r\n\t\t\tconst words = snapshot.docs.map((doc) => ({ id: doc.id, word: doc.data() }));\r\n\r\n\t\t\tsetList(words);\r\n\t\t\t// setLoading(false);\r\n\t\t});\r\n\t};\r\n\r\n\t// Get the whole word list\r\n\tconst handleGetWholeWordList = (limit, setList) => {\r\n\t\t// setLoading(true);\r\n\r\n\t\t// Get words available count\r\n\t\t/* \t\tdb.collection(\"users\")\r\n\t\t\t.doc(loggedUser.id)\r\n\t\t\t.collection(\"user-words\")\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tsetItemsCount(snapshot.docs.length);\r\n\t\t\t}); */\r\n\r\n\t\treturn db\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(loggedUser.id)\r\n\t\t\t.collection(\"user-words\")\r\n\t\t\t.orderBy(\"timestamp\", \"desc\")\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tconst words = snapshot.docs.map((doc) => ({ id: doc.id, word: doc.data() }));\r\n\r\n\t\t\t\tsetList(words);\r\n\t\t\t});\r\n\t};\r\n\r\n\t// get word list depends on the given period\r\n\tconst handleGetWordListByDate = (limit, period, setList) => {\r\n\t\t// setLoading(true);\r\n\t\tconst startDate = getDateOnPeriod(period).startDate;\r\n\t\t// Which is today - endDate\r\n\t\tconst endDate = getDateOnPeriod(period).endDate;\r\n\r\n\t\tconst dateQueryRef = db\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(loggedUser.id)\r\n\t\t\t.collection(\"user-words\")\r\n\t\t\t.where(\"timestamp\", \">=\", startDate)\r\n\t\t\t.where(\"timestamp\", \"<=\", endDate)\r\n\t\t\t.orderBy(\"timestamp\", \"desc\");\r\n\r\n\t\t// Get words available count\r\n\t\t/* dateQueryRef.get().then((snapshot) => {\r\n\t\t\tsetItemsCount(snapshot.docs.length);\r\n\t\t}); */\r\n\r\n\t\treturn dateQueryRef.onSnapshot((snapshot) => {\r\n\t\t\tconst words = snapshot.docs.map((doc) => ({ id: doc.id, word: doc.data() }));\r\n\r\n\t\t\tsetList(words);\r\n\t\t});\r\n\t};\r\n\t// For logged user - end\r\n\r\n\t// Get audio src for a given word\r\n\tconst handleGetAudioSrc = async (word) => {\r\n\t\tconst res = await fetch(dicApiReq(word));\r\n\t\tconst data =\r\n\t\t\tawait res.json(); /* Return an array of words, so I need to target the first one below */\r\n\t\tconst wordObj = data[0];\r\n\t\tconst phonetic =\r\n\t\t\twordObj !== undefined && wordObj.phonetics.length !== 0 ? wordObj.phonetics[0] : null;\r\n\r\n\t\treturn phonetic === null ? \"\" : phonetic.audio;\r\n\t};\r\n\r\n\t// Handle add word to db - and will be used with AI\r\n\tconst handleAddWord = async (wordData, needMoreInfo) => {\r\n\t\tconst { word, category, sentences, synonyms } = wordData;\r\n\r\n\t\t// Check for the word existence\r\n\t\tconst isExisted = await isWordExisted(word);\r\n\r\n\t\tif (isExisted) return processSettings(\"error\", `You added this word (${word}) before`);\r\n\r\n\t\t// The sentences that I provide must be highlighted, so I provide an extra prop here\r\n\t\tconst mySentences = sentences.map((sentence) => ({ ...sentence, userProvided: true }));\r\n\r\n\t\tlet dbWord = {\r\n\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t\tword,\r\n\t\t\tcategory,\r\n\t\t\timages: [],\r\n\t\t\tsentences: [...mySentences],\r\n\t\t\tsynonyms: [...synonyms],\r\n\t\t};\r\n\t\t// If the category is idiom we don't need: images and more info\r\n\r\n\t\tif (category !== \"phrase\") {\r\n\t\t\t// Get some images (or 1) from unsplash\r\n\t\t\tconst images = await handleGetImages(wordData.word, 3);\r\n\r\n\t\t\t// Get the (audio src) & more (Synonyms, sentences) the https://dictionaryapi.dev/\r\n\t\t\tconst moreInfo = await handleGetMoreWordInfo(wordData.word);\r\n\r\n\t\t\tdbWord = {\r\n\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t\t\tword,\r\n\t\t\t\tcategory,\r\n\t\t\t\timages,\r\n\t\t\t\t...(moreInfo === \"word does not exist\" || !needMoreInfo\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\tsentences: [...mySentences],\r\n\t\t\t\t\t\t\tsynonyms: [...synonyms],\r\n\t\t\t\t\t\t\twordAudio: \"\",\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\tsentences: [...moreInfo.sentences, ...mySentences],\r\n\t\t\t\t\t\t\tsynonyms: [...synonyms, ...moreInfo.synonyms],\r\n\t\t\t\t\t\t\twordAudio: moreInfo.audioSrc,\r\n\t\t\t\t\t  }),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdb.collection(\"users\").doc(loggedUser.id).collection(\"user-words\").add(dbWord);\r\n\t};\r\n\r\n\t// Handle delete word by id\r\n\tconst handleDeleteWord = (id) => {\r\n\t\tdb.collection(\"users\").doc(loggedUser.id).collection(\"user-words\").doc(id).delete();\r\n\t};\r\n\r\n\t// Handle update a certain word by id\r\n\tconst handleUpdateWord = (id, newWordData) => {\r\n\t\tdb.collection(\"users\").doc(loggedUser.id).collection(\"user-words\").doc(id).update(newWordData);\r\n\t};\r\n\r\n\t// Handle register a user\r\n\tconst handleRegisterUser = async (userInfo) => {\r\n\t\t// destructuring the user\r\n\t\tlet { avatar, fullName, email, password } = userInfo;\r\n\r\n\t\t// set loading\r\n\t\tsetLoading(true);\r\n\r\n\t\t// Auth the user\r\n\t\tconst newUser = auth.createUserWithEmailAndPassword(email, password);\r\n\r\n\t\t// Check for the avatar\r\n\t\tif (avatar != null || avatar != undefined) {\r\n\t\t\t// handle upload the avatar\r\n\t\t\tavatar = await handleUploadUserAvatar(avatar);\r\n\t\t}\r\n\r\n\t\t// Update the user's fullName and avatar\r\n\t\tnewUser.then((authUser) => {\r\n\t\t\tconst dbUser = {\r\n\t\t\t\tfullName,\r\n\t\t\t\temail,\r\n\t\t\t\tavatar: avatar,\r\n\t\t\t\tid: authUser.user.uid,\r\n\t\t\t};\r\n\t\t\taddUserToDb(dbUser);\r\n\r\n\t\t\t// Stop the loading progress\r\n\t\t\tsetLoading(false);\r\n\r\n\t\t\tauthUser.user.updateProfile({\r\n\t\t\t\tdisplayName: fullName,\r\n\t\t\t\tphotoURL: avatar,\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\t// Handle signin a user\r\n\tconst handleSignin = (email, password) => {\r\n\t\t// set loading\r\n\r\n\t\tauth\r\n\t\t\t.signInWithEmailAndPassword(email, password)\r\n\t\t\t.then((loggedUser) => {\r\n\t\t\t\t// Go to home - if there is from page => go to it\r\n\t\t\t\thistory.replace(\"/\");\r\n\t\t\t})\r\n\t\t\t.catch((error) => alert(error.message));\r\n\t};\r\n\r\n\t// handle sign out\r\n\tconst handleSignOut = () => {\r\n\t\tauth.signOut().then(() => {\r\n\t\t\t// Go to login page\r\n\t\t\thistory.replace(\"/signin\");\r\n\t\t});\r\n\t};\r\n\r\n\treturn {\r\n\t\thandleGetWordListOnCategory,\r\n\t\thandleGetWholeWordList,\r\n\t\thandleAddWord,\r\n\t\thandleGetAudioSrc,\r\n\t\thandleDeleteWord,\r\n\t\thandleUpdateWord,\r\n\t\twordDicAbility,\r\n\t\thandleGetWordListByDate,\r\n\t\tloading,\r\n\t\titemsCount,\r\n\t\thandleRegisterUser,\r\n\t\thandleSignin,\r\n\t\thandleSignOut,\r\n\t};\r\n}\r\n\r\nexport default Store;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\HomepageTabs.js",["271"],"import { useState, useRef } from \"react\";\r\n\r\n// Router\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// Material-UI imports\r\nimport { makeStyles, Tabs, Tab } from \"@material-ui/core\";\r\n\r\n// Hooks\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\n\r\n// Info\r\nimport { PATHS, homepageTabs } from \"../helpers/info\";\r\n\r\n// Components\r\nimport PeriodMenu from \"./PeriodMenu\";\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttabsRoot: {\r\n\t\tbackground: \"white\",\r\n\t},\r\n}));\r\n\r\nfunction HomepageTabs({\r\n\tcurrentTab,\r\n\thandleChangeTab,\r\n\tisWrapped,\r\n\tindClr = \"black\",\r\n\thandleChangePeriod,\r\n\tperiod,\r\n}) {\r\n\tconst classes = useStyles();\r\n\r\n\t// refs\r\n\tconst sortByDateTabRef = useRef();\r\n\r\n\t// State vars\r\n\tconst [periodMenuOpen, setPeriodMenuOpen] = useState(false);\r\n\r\n\t// Get the window width to decide the wrapped property if it is enabled\r\n\tconst { windowWidth } = useWindowWidth();\r\n\r\n\t// handle toggle the period menu\r\n\tconst handleTogglePeriodMenu = () => {\r\n\t\tsetPeriodMenuOpen((prev) => !prev);\r\n\t};\r\n\r\n\t// const wrapping = windowWidth <= 600 ? { wrapped: true } : {};\r\n\r\n\t// map through tabs\r\n\tconst mappedTabs = homepageTabs.map((tab) => (\r\n\t\t<Tab\r\n\t\t\tkey={tab.label}\r\n\t\t\tlabel={tab.label}\r\n\t\t\tto={tab.path}\r\n\t\t\tcomponent={RouterLink}\r\n\t\t\t{...(tab.path === PATHS.BY_DATE && {\r\n\t\t\t\tref: sortByDateTabRef,\r\n\t\t\t\tonClick: handleTogglePeriodMenu,\r\n\t\t\t})}\r\n\t\t/>\r\n\t));\r\n\r\n\t// Indicator styles object\r\n\tconst indicatorStyles = {\r\n\t\tbackground: indClr,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tabs\r\n\t\t\t\tclasses={{ root: classes.tabsRoot }}\r\n\t\t\t\tonChange={handleChangeTab}\r\n\t\t\t\tTabIndicatorProps={{ style: indicatorStyles }}\r\n\t\t\t\tvalue={currentTab}\r\n\t\t\t\tcentered\r\n\t\t\t>\r\n\t\t\t\t{mappedTabs}\r\n\t\t\t</Tabs>\r\n\r\n\t\t\t{/* Period menu dropdown */}\r\n\t\t\t<PeriodMenu\r\n\t\t\t\topen={periodMenuOpen}\r\n\t\t\t\tanchorEl={sortByDateTabRef.current}\r\n\t\t\t\tcurrentPeriod={period}\r\n\t\t\t\thandleChangePeriod={handleChangePeriod}\r\n\t\t\t\thandleTogglePeriodMenu={handleTogglePeriodMenu}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default HomepageTabs;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\AddWordToggler.js",["272","273","274","275"],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\helpers\\functions.js",["276","277","278","279","280"],"function getDateOnPeriod(period) {\r\n\tlet currDate = new Date();\r\n\tconst currDay = currDate.getDate();\r\n\tconst currMonth = currDate.getMonth();\r\n\tconst currYear = currDate.getFullYear();\r\n\r\n\tlet endDate = new Date(`${currYear}-${currMonth + 1}-${currDay + 1}`);\r\n\r\n\tswitch (period) {\r\n\t\tcase \"today\":\r\n\t\t\tbreak;\r\n\t\tcase \"yesterday\":\r\n\t\t\tendDate.setDate(currDay);\r\n\t\t\tcurrDate.setDate(currDay - 1);\r\n\t\t\tbreak;\r\n\t\tcase \"last-week\":\r\n\t\t\tcurrDate.setDate(currDay - 7);\r\n\t\t\tbreak;\r\n\t\tcase \"last-month\":\r\n\t\t\tcurrDate.setMonth(currMonth - 1);\r\n\t\t\tbreak;\r\n\t\t// Custom date\r\n\t\tdefault:\r\n\t\t\t// change the period's type to (date object) because LocalStorage makes it as string\r\n\t\t\tperiod = new Date(period);\r\n\t\t\tcurrDate.setDate(period.getDate());\r\n\t\t\tcurrDate.setMonth(period.getMonth());\r\n\t\t\tcurrDate.setFullYear(period.getFullYear());\r\n\t\t\tendDate = new Date(\r\n\t\t\t\t`${period.getFullYear()}-${period.getMonth() + 1}-${period.getDate() + 1}`\r\n\t\t\t);\r\n\t}\r\n\r\n\tconst startDate = new Date(\r\n\t\t`${currDate.getFullYear()}-${currDate.getMonth() + 1}-${currDate.getDate()}`.replace(/\\//g, \"-\")\r\n\t);\r\n\treturn { startDate, endDate };\r\n}\r\n\r\nconst userValidation = (firedInput, setErrors) => {\r\n\tconst errors = {};\r\n\tconst emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\tconst passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?=.*[a-zA-Z]).{8,}$/;\r\n\tconst nameRegex = /^(?=.*\\d)*(?=.*[a-z])(?=.*[a-zA-Z]).{8,}$/;\r\n\tconst usernameRegex = /^(?=.*\\d)*(?=.*[a-z])(?=.*[a-zA-Z]).{5,}$/;\r\n\tconst webUrlRegex =\r\n\t\t/[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\r\n\tif (\"fullName\" in firedInput) {\r\n\t\terrors.fullName = valCond(\r\n\t\t\tnameRegex.test(firedInput.fullName),\r\n\t\t\t\"Your Name Must be 8 letters at least\"\r\n\t\t);\r\n\t}\r\n\tif (\"username\" in firedInput) {\r\n\t\terrors.username = valCond(\r\n\t\t\tusernameRegex.test(firedInput.username),\r\n\t\t\t\"Username must be 5 letters at least\"\r\n\t\t);\r\n\t}\r\n\tif (\"email\" in firedInput) {\r\n\t\terrors.email = valCond(emailRegex.test(firedInput.email), \"Email is badly formatted\");\r\n\t}\r\n\tif (\"password\" in firedInput) {\r\n\t\terrors.password = valCond(passwordRegex.test(firedInput.password), \"Password isn't strong\");\r\n\t}\r\n\tif (\"website\" in firedInput) {\r\n\t\terrors.website = valCond(\r\n\t\t\tfiredInput.website == \"\" || webUrlRegex.test(firedInput.website),\r\n\t\t\t\"Url is bad formatted\"\r\n\t\t);\r\n\t}\r\n\r\n\tsetErrors(errors);\r\n\r\n\treturn Object.values(errors).every((input) => input == \"\");\r\n};\r\n\r\n// validation condition\r\nconst valCond = (condition, errMsg) => {\r\n\treturn condition ? \"\" : `${errMsg}.`;\r\n};\r\n\r\n// DuplicatableKey => the key that may duplicate in the objects and causes them to duplicate\r\nconst removeDuplicatedObjsInArr = (array, duplicatableKey) => {\r\n\tconst keys = array.map((key) => key[duplicatableKey]);\r\n\tconst refinedKeys = [...new Set(keys)];\r\n\tconst finalArray = refinedKeys.map((key) => array.find((item) => item[duplicatableKey] === key));\r\n\r\n\treturn finalArray;\r\n};\r\n\r\nexport { getDateOnPeriod, userValidation, removeDuplicatedObjsInArr };\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\helpers\\info.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\router\\UnAuthRoute.js",["281"],"// Router\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\n// Contexts - to get the already logged user\r\nimport { AuthedUser } from \"../../contexts/UserContext\";\r\n\r\nfunction UnAuthRoute({ children, ...other }) {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...other}\r\n\t\t\trender={({ location }) =>\r\n\t\t\t\tloggedUser == \"no user\" ? (\r\n\t\t\t\t\tchildren\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: \"/\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default UnAuthRoute;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\util\\IF.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\header\\Header.js",["282","283","284","285"],"// router\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// UI\r\nimport { AppBar, Avatar, Button, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\r\n\r\n// Icon\r\nimport { LoginIcon, LogoutIcon, UserAddIcon } from \"@heroicons/react/outline\";\r\n\r\n// Util\r\nimport IF from \"../../common-components/util/IF\";\r\n\r\n// Hooks\r\nimport useAlan from \"../../hooks/useAlan\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../../contexts/UserContext\";\r\n\r\n// Components\r\nimport Store from \"../../back-ends/Store\";\r\nimport { createElement } from \"react\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\tuserAvatar: {\r\n\t\twidth: 32,\r\n\t\theight: 32,\r\n\t},\r\n}));\r\n\r\nfunction Header() {\r\n\tconst classes = useStyles();\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// Import Store component to handle Logout\r\n\tconst { handleSignOut } = Store();\r\n\r\n\t// Button props\r\n\tconst btnProps = (color, icon, to, component = RouterLink) => ({\r\n\t\tcolor,\r\n\t\tcomponent,\r\n\t\tstartIcon: icon,\r\n\t\tto,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<AppBar color=\"inherit\" variant=\"outlined\" position=\"relative\">\r\n\t\t\t<Toolbar variant=\"dense\">\r\n\t\t\t\t{/* Login state (If there is no a user) */}\r\n\t\t\t\t<IF condition={loggedUser == \"no user\"}>\r\n\t\t\t\t\t<div className=\"flex flex-1 items-center space-x-2 app-header\">\r\n\t\t\t\t\t\t<Button {...btnProps(\"primary\", <LoginIcon className=\"h-6\" />, \"/signin\")}>\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Login</span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button {...btnProps(\"primary\", <UserAddIcon className=\"h-5\" />, \"/register\")}>\r\n\t\t\t\t\t\t\t<span className=\"text-gray-600\">Register</span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</IF>\r\n\r\n\t\t\t\t{/* logout state (If there is a user) */}\r\n\t\t\t\t{loggedUser != \"no user\" && (\r\n\t\t\t\t\t<div className=\"flex flex-1 items-center justify-between\">\r\n\t\t\t\t\t\t{/* User name and avatar */}\r\n\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t<Avatar className={classes.userAvatar} src={loggedUser.avatar}>\r\n\t\t\t\t\t\t\t\t{loggedUser.fullName[0]}\r\n\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t<h3 className=\"font-semibold ml-2\">{loggedUser.fullName}</h3>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<IconButton color=\"secondary\" onClick={handleSignOut}>\r\n\t\t\t\t\t\t\t<LogoutIcon className=\"h-6\" />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordList.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\SearchBar.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordCard.js",["286"],"import { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// UI\r\nimport { Fade } from \"@material-ui/core\";\r\n\r\n// Icons\r\n\r\n// Util\r\nimport IF from \"../../common-components/util/IF\";\r\n\r\n// Components\r\nimport Store from \"../../back-ends/Store\";\r\nimport WordControls from \"./WordControls\";\r\nimport WordExamples from \"./WordExamples\";\r\nimport WordSynonyms from \"./WordSynonyms\";\r\nimport WordCardHeader from \"./WordCardHeader\";\r\n\r\nfunction WordCard({ wordData, id, listRef, limit, period }) {\r\n\t// Destructuring through the word object\r\n\tconst { word, images, sentences, synonyms, wordAudio } = wordData;\r\n\r\n\t// Router\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tif (location.state && location.state.lastWordOpen) {\r\n\t\thistory.replace(location.state.lastWordOpen);\r\n\t}\r\n\r\n\t// State vars\r\n\tconst [wordImage, setWordImage] = useState(\"\");\r\n\r\n\t// Refs\r\n\tconst audioRef = useRef();\r\n\r\n\t// Import the Store component to handle getting the synonym audio src\r\n\tconst { handleDeleteWord } = Store();\r\n\r\n\t// Handle delete word\r\n\tconst handleRemoveWord = () => {\r\n\t\thandleDeleteWord(id);\r\n\t};\r\n\r\n\t// handle show a random image\r\n\tconst handleShowImage = () => {\r\n\t\tconst randImage =\r\n\t\t\timages.sort(() => Math.random() - 0.5).length === 0\r\n\t\t\t\t? \"\"\r\n\t\t\t\t: images.sort(() => Math.random() - 0.5)[0];\r\n\t\tsetWordImage((prevState) => (prevState === \"\" ? randImage : \"\"));\r\n\t};\r\n\r\n\t// Card styles - classNames\r\n\tconst cardStyles = {\r\n\t\tbackgroundImage: `url('${wordImage}')`,\r\n\t\tminHeight: wordData.category === \"phrase\" && 272,\r\n\t\theight: wordData.category === \"phrase\" && 272,\r\n\t};\r\n\tconst cardClassnames = `${\r\n\t\twordImage !== \"\" && \"text-white\"\r\n\t} border p-4 bg-white bg-cover rounded-md overflow-hidden relative shadow-inner bg-center bg-no-repeat`;\r\n\r\n\treturn (\r\n\t\t<div className={cardClassnames} style={cardStyles} id={word}>\r\n\t\t\t{/* overlay */}\r\n\t\t\t<IF condition={wordImage !== \"\"}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"absolute w-full h-full inset-0\"\r\n\t\t\t\t\tstyle={{ background: \"rgb(0 0 0 / 60%)\" }}\r\n\t\t\t\t></div>\r\n\t\t\t</IF>\r\n\t\t\t{/* Word Body */}\r\n\t\t\t<div className=\"flex flex-col relative h-full\">\r\n\t\t\t\t{/* Header */}\r\n\t\t\t\t<WordCardHeader\r\n\t\t\t\t\tperiod={period}\r\n\t\t\t\t\tlimit={limit}\r\n\t\t\t\t\tlistRef={listRef}\r\n\t\t\t\t\twordImage={wordImage}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\twordData={wordData}\r\n\t\t\t\t\taudioRef={audioRef}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* Word Controls */}\r\n\t\t\t\t<WordControls\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\twordData={wordData}\r\n\t\t\t\t\thandleRemoveWord={handleRemoveWord}\r\n\t\t\t\t\thandleShowImage={handleShowImage}\r\n\t\t\t\t\twordImage={wordImage}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* If there is no image hide the content */}\r\n\t\t\t\t<Fade in={!Boolean(wordImage)}>\r\n\t\t\t\t\t<div className=\"mt-auto\">\r\n\t\t\t\t\t\t{/* Sentences */}\r\n\t\t\t\t\t\t<WordExamples sentences={sentences} word={word} />\r\n\r\n\t\t\t\t\t\t{/* Synonyms */}\r\n\t\t\t\t\t\t<WordSynonyms synonyms={synonyms} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fade>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* word audio sound reference */}\r\n\t\t\t<audio src={wordAudio} ref={audioRef}></audio>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WordCard;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\pages\\auth\\Login.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\pages\\auth\\Register.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\back-ends\\HelperFunctions.js",["287","288","289"],"// Firebase\r\nimport { db, storage } from \"./database\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../contexts/UserContext\";\r\n\r\n// info\r\nimport { dicApiReq, unsplashApiReq } from \"../helpers/info\";\r\n\r\nfunction Helpers() {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// Handle get images depending on the given word\r\n\tconst handleGetImages = async (word, imagesCount = 3) => {\r\n\t\tconst res = await fetch(unsplashApiReq(word));\r\n\t\tconst data = await res.json();\r\n\t\tconst results = data.results;\r\n\r\n\t\treturn results.slice(0, imagesCount).map((image) => image.urls.small);\r\n\t};\r\n\r\n\t// handle get synonyms & sentences & the audio arc from the https://dictionaryapi.dev/ website\r\n\tconst handleGetMoreWordInfo = async (word) => {\r\n\t\tconst res = await fetch(dicApiReq(word));\r\n\t\tconst data =\r\n\t\t\tawait res.json(); /* Return an array of words, so I need to target the first one below */\r\n\t\tconst wordObj = data[0];\r\n\t\tif (wordObj === undefined) return \"word does not exist\";\r\n\r\n\t\tconst audioSrc = wordObj.phonetics.length != 0 ? wordObj.phonetics[0].audio : \"\";\r\n\t\tconst definitions = wordObj.meanings.map((meaning) => meaning.definitions).flat();\r\n\t\tconst exampleSentences = [];\r\n\t\tconst synonyms = [];\r\n\r\n\t\tdefinitions.forEach((definition) => {\r\n\t\t\tconst example = definition.example;\r\n\t\t\tconst synms = definition.synonyms;\r\n\t\t\t// Get example sentences\r\n\t\t\tif (example != undefined || example != null) {\r\n\t\t\t\texampleSentences.push({\r\n\t\t\t\t\tbody: example,\r\n\t\t\t\t\tid: new Date().getTime() * Math.random(),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// Get synonyms\r\n\t\t\tif (synms != undefined || synms != null) {\r\n\t\t\t\tsynonyms.push(synms);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// get the audio src for each synonym\r\n\t\tconst fullSynonyms = synonyms.flat().map((syn) => ({\r\n\t\t\tbody: syn,\r\n\t\t\tid: new Date().getTime() * Math.random(),\r\n\t\t}));\r\n\r\n\t\treturn {\r\n\t\t\taudioSrc,\r\n\t\t\tsynonyms: fullSynonyms,\r\n\t\t\tsentences: exampleSentences,\r\n\t\t};\r\n\t};\r\n\r\n\t// Check words ability to be fetched from the https://dictionaryapi.dev/ api\r\n\tconst wordDicAbility = async (word) => {\r\n\t\tconst res = await fetch(dicApiReq(word));\r\n\t\tconst data =\r\n\t\t\tawait res.json(); /* Return an array of words, so I need to target the first one below */\r\n\t\tconst wordObj = data[0];\r\n\t\tif (wordObj === undefined) return false;\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\t// handle add the user to db\r\n\tconst addUserToDb = (userInfo) => {\r\n\t\tdb.collection(\"users\").doc(userInfo.id).set(userInfo);\r\n\t};\r\n\r\n\t// handle upload a user avatar\r\n\tconst handleUploadUserAvatar = async (avatar) => {\r\n\t\t// 1. upload the avatar\r\n\t\tawait storage.ref(`users-avatar/${avatar.name}`).put(avatar);\r\n\r\n\t\t// return the download url\r\n\t\treturn storage\r\n\t\t\t.ref(\"users-avatar\")\r\n\t\t\t.child(avatar.name)\r\n\t\t\t.getDownloadURL()\r\n\t\t\t.then((url) => url);\r\n\t};\r\n\r\n\t// check if the word has already added or hasn't\r\n\tconst isWordExisted = (word) => {\r\n\t\treturn db\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(loggedUser.id)\r\n\t\t\t.collection(\"user-words\")\r\n\t\t\t.where(\"word\", \"==\", word)\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\treturn !snapshot.empty;\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn {\r\n\t\thandleGetImages,\r\n\t\thandleGetMoreWordInfo,\r\n\t\twordDicAbility,\r\n\t\taddUserToDb,\r\n\t\thandleUploadUserAvatar,\r\n\t\tisWordExisted,\r\n\t};\r\n}\r\n\r\nexport default Helpers;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\PeriodMenu.js",["290"],"import { useEffect, useState } from \"react\";\r\n// UI\r\nimport { ClickAwayListener, makeStyles, MenuItem, MenuList } from \"@material-ui/core\";\r\nimport CustomMenuList from \"../common-components/ui/CustomMenuList\";\r\nimport \"date-fns\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// Info\r\nimport { DATE_SORTING_PERIODS } from \"../helpers/info\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\tactiveItem: {\r\n\t\tborderLeft: \"2px solid black\",\r\n\t},\r\n}));\r\n\r\nfunction PeriodMenu({ open, anchorEl, handleChangePeriod, handleTogglePeriodMenu, currentPeriod }) {\r\n\tconst classes = useStyles();\r\n\r\n\t// State vars\r\n\tconst [customDateOpen, setCustomDateOpen] = useState(false);\r\n\tconst [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n\t//  handle click on the menu item (period item)\r\n\tconst handleClickItem = (period) => {\r\n\t\t// Change the curr period\r\n\t\thandleChangePeriod(period);\r\n\r\n\t\t// Close the menu\r\n\t\thandleTogglePeriodMenu();\r\n\t};\r\n\r\n\t// Map through date period\r\n\tconst mappedPeriods = DATE_SORTING_PERIODS.map(({ label, period }) => (\r\n\t\t<MenuItem\r\n\t\t\tkey={label}\r\n\t\t\tonClick={() => handleClickItem(period)}\r\n\t\t\tclassName={currentPeriod === period && classes.activeItem}\r\n\t\t>\r\n\t\t\t{label}\r\n\t\t</MenuItem>\r\n\t));\r\n\r\n\tconst isCustomDate =\r\n\t\ttypeof currentPeriod === \"object\" ||\r\n\t\t(typeof currentPeriod === \"object\" && currentPeriod.label === undefined);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isCustomDate) setSelectedDate(new Date());\r\n\t}, [currentPeriod]);\r\n\r\n\treturn (\r\n\t\t<CustomMenuList open={open} anchorEl={anchorEl} placement={\"center\"}>\r\n\t\t\t{/* away listener to close the menu as we click outside of the menu */}\r\n\t\t\t<ClickAwayListener onClickAway={handleTogglePeriodMenu}>\r\n\t\t\t\t<div className=\"w-44\">\r\n\t\t\t\t\t<MenuList autoFocusItem>\r\n\t\t\t\t\t\t{mappedPeriods}\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tclassName={isCustomDate && classes.activeItem}\r\n\t\t\t\t\t\t\tonClick={() => setCustomDateOpen(true)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCustom Date\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</MenuList>\r\n\r\n\t\t\t\t\t{/* Date Picker */}\r\n\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t\t<div className=\"hidden\">\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\topen={customDateOpen}\r\n\t\t\t\t\t\t\t\tvalue={selectedDate}\r\n\t\t\t\t\t\t\t\tonChange={(date) => {\r\n\t\t\t\t\t\t\t\t\thandleChangePeriod(date);\r\n\r\n\t\t\t\t\t\t\t\t\t// Change the actual value\r\n\t\t\t\t\t\t\t\t\tsetSelectedDate(date);\r\n\r\n\t\t\t\t\t\t\t\t\t// Close the menu\r\n\t\t\t\t\t\t\t\t\thandleTogglePeriodMenu();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClose={() => setCustomDateOpen(false)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t</div>\r\n\t\t\t</ClickAwayListener>\r\n\t\t</CustomMenuList>\r\n\t);\r\n}\r\n\r\nexport default PeriodMenu;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\forms\\WordForm.js",["291"],"import { useEffect, useState } from \"react\";\r\n\r\n// UI\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport Controls from \"../common-components/controls/Controls\";\r\nimport SpeechToText from \"../common-components/controls/SpeechToText\";\r\n\r\n// Icons\r\n\r\n// Hooks\r\nimport { useForm, Form } from \"../hooks/useForm\";\r\n\r\n// Util\r\n\r\n// Info\r\nimport { WORD_CATEGORIES } from \"../helpers/info\";\r\n\r\n// Components\r\nimport Store from \"../back-ends/Store\";\r\nimport FormList from \"../common-components/ui/form-list/FormList\";\r\n\r\nexport default function WordForm(props) {\r\n\tconst { wordData, handleClosePopup, action, wordDocId } = props;\r\n\r\n\tconst { sentences, synonyms, category } = wordData;\r\n\r\n\t// State vars\r\n\tconst [wordText, setWord] = useState(wordData.word);\r\n\tconst [sens, setSens] = useState(sentences);\r\n\tconst [syns, setSyns] = useState(synonyms);\r\n\tconst [needMoreInfo, setNeedMoreInfo] = useState(true);\r\n\tconst [wordAvailability, setWordAvailability] = useState(\"\");\r\n\r\n\t// Import useForm\r\n\tconst formInitialValues = { category };\r\n\tconst { values: wordInfo, inputCommonProps } = useForm(formInitialValues, false);\r\n\r\n\t// Speech to text hook\r\n\tconst { listeningIcon, handleStartStopListening, text: result } = SpeechToText();\r\n\r\n\t// add a listener for speech to text hooks\r\n\tuseEffect(() => {\r\n\t\t// don't change it at the first render\r\n\t\tif (result !== \"\") setWord(result);\r\n\t}, [result]);\r\n\r\n\t// blank the wordAvailability if the word changes\r\n\tuseEffect(() => {\r\n\t\tsetWordAvailability(\"\");\r\n\t}, [wordText]);\r\n\r\n\t// Sentences form list props\r\n\tconst sensFormListProps = {\r\n\t\tlistLabel: \"Sentences\",\r\n\t\tlist: sens,\r\n\t\tinputLabel: \"Sentence Here...\",\r\n\t\tsetList: setSens,\r\n\t\twrapperClassName: \"mt-4\",\r\n\t};\r\n\r\n\t// Synonyms form list props\r\n\tconst synonymsFormListProps = {\r\n\t\tlistLabel: \"Synonyms\",\r\n\t\tlist: syns,\r\n\t\tinputLabel: \"Synonym Here...\",\r\n\t\tsetList: setSyns,\r\n\t\twrapperClassName: \"mt-2\",\r\n\t};\r\n\r\n\t// Import the Store component to add the word to the db\r\n\tconst { handleUpdateWord, handleAddWord, wordDicAbility } = Store();\r\n\r\n\t// handle add the word\r\n\tconst handleSubmit = () => {\r\n\t\tconst DBWord = {\r\n\t\t\tcategory: wordInfo.category.toLowerCase(),\r\n\t\t\tword: wordText.toLowerCase(),\r\n\t\t\tsentences: sens.filter((sentence) => sentence.body !== \"\"),\r\n\t\t\tsynonyms: syns.filter((synonym) => synonym.body !== \"\"),\r\n\t\t};\r\n\r\n\t\t// Close the popup\r\n\t\thandleClosePopup();\r\n\r\n\t\t// Send it to database\r\n\t\tif (wordText === \"\") return;\r\n\r\n\t\tif (action === \"update\") {\r\n\t\t\thandleUpdateWord(wordDocId, DBWord);\r\n\t\t} else {\r\n\t\t\thandleAddWord(DBWord, needMoreInfo);\r\n\t\t}\r\n\t};\r\n\r\n\t// handle check word availability\r\n\tconst handleCheckWord = async () => {\r\n\t\tconst msg = `${!(await wordDicAbility(wordText)) ? \"Not\" : \"\"} Available`;\r\n\t\tsetWordAvailability(msg);\r\n\t};\r\n\r\n\t// Word availability style\r\n\tconst availabilityMsgStyle = wordAvailability == \"Available\" ? \"green\" : \"red\";\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t{/* Word input */}\r\n\t\t\t<div className=\"mb-3 flex items-center space-x-2\">\r\n\t\t\t\t<Controls.TextInput\r\n\t\t\t\t\tInputProps={{ autoFocus: true, autoComplete: \"off\" }}\r\n\t\t\t\t\tlabel=\"Word\"\r\n\t\t\t\t\tinputChange={(e) => setWord(e.target.value)}\r\n\t\t\t\t\tvalue={wordText}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<IconButton color=\"primary\" size=\"small\" onClick={handleStartStopListening}>\r\n\t\t\t\t\t{listeningIcon}\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* category input */}\r\n\t\t\t<Controls.SelectBoxInput\r\n\t\t\t\titems={WORD_CATEGORIES}\r\n\t\t\t\t{...inputCommonProps(\"Category\", \"category\", wordInfo.category)}\r\n\t\t\t/>\r\n\r\n\t\t\t{/* Sentences forms list */}\r\n\t\t\t<div className=\"my-3\">\r\n\t\t\t\t<FormList {...sensFormListProps} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* <Divider orientation=\"horizontal\" /> Just to remember it */}\r\n\r\n\t\t\t{/* Sentences forms list */}\r\n\t\t\t<div className=\"mt-6\">\r\n\t\t\t\t<FormList {...synonymsFormListProps} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* action => Submit(add, update) button & check word availability in the dictionary */}\r\n\t\t\t<div className=\"mt-5 flex justify-between flex-wrap\">\r\n\t\t\t\t<div className=\"flex space-x-2 \">\r\n\t\t\t\t\t<Button type=\"submit\" color=\"secondary\" variant=\"outlined\">\r\n\t\t\t\t\t\t<span className=\"capitalize\">{action}</span>\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t<Button onClick={handleCheckWord} type=\"button\" color=\"primary\" variant=\"outlined\">\r\n\t\t\t\t\t\t\t<span className=\"capitalize\">Dic. Check</span>\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<p className={`ml-2 text-sm text-${availabilityMsgStyle}-600`}>{wordAvailability}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* a switch for (more info) need */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Controls.Toggler\r\n\t\t\t\t\t\tchecked={needMoreInfo}\r\n\t\t\t\t\t\tlabel=\"Dic. info\"\r\n\t\t\t\t\t\tinputChange={(e) => setNeedMoreInfo(e.target.checked)}\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Form>\r\n\t);\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordSynonyms.js",["292"],"import { useEffect, useState } from \"react\";\r\n\r\n// UI\r\nimport { Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\n// Icons\r\nimport { RefreshIcon, VolumeUpIcon } from \"@heroicons/react/outline\";\r\n\r\n// Info & functions\r\nimport { removeDuplicatedObjsInArr } from \"../../helpers/functions\";\r\n\r\n// Components\r\nimport Store from \"../../back-ends/Store\";\r\n\r\nfunction WordSynonyms({ synonyms }) {\r\n\t// Store component\r\n\tconst { handleGetAudioSrc } = Store();\r\n\r\n\t// Handle speak synonyms\r\n\tconst handleSpeakSynonym = async (word) => {\r\n\t\tconst audioSrc = await handleGetAudioSrc(word);\r\n\t\tconst audioEl = document.createElement(\"audio\");\r\n\t\taudioEl.src = audioSrc;\r\n\t\taudioEl.play();\r\n\t};\r\n\r\n\t// State vars\r\n\t// for synonyms so that i can handle refreshing it\r\n\tconst [syns, setSyns] = useState(synonyms);\r\n\r\n\t// handle refresh the synonyms list\r\n\tconst handleRefreshSynonyms = () => {\r\n\t\tconst newSyns = synonyms.sort(() => Math.random() - 0.5);\r\n\r\n\t\tsetSyns([...newSyns]);\r\n\t};\r\n\r\n\t// Set a listener for sents update\r\n\tuseEffect(() => {\r\n\t\t// if synonyms get updated then refresh the list\r\n\t\thandleRefreshSynonyms();\r\n\t}, [synonyms]);\r\n\r\n\t// Map through synonyms\r\n\tconst mappedSynonyms = removeDuplicatedObjsInArr(syns, \"body\")\r\n\t\t.slice(0, 3)\r\n\t\t.map(({ body, id }) => (\r\n\t\t\t<li key={id} className=\"flex items-center\">\r\n\t\t\t\t<VolumeUpIcon\r\n\t\t\t\t\tonClick={() => handleSpeakSynonym(body)}\r\n\t\t\t\t\tclassName=\"h-5 mr-2 cursor-pointer text-red-400\"\r\n\t\t\t\t/>\r\n\t\t\t\t{body}\r\n\t\t\t</li>\r\n\t\t));\r\n\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<h4 className=\"mt-3 font-semibold mb-1 flex items-center space-x-1\">\r\n\t\t\t\t<span>Synonyms</span>\r\n\t\t\t\t<Tooltip title={\"Refresh Synonyms\"} placement=\"right\" arrow={true}>\r\n\t\t\t\t\t<IconButton size=\"small\" onClick={handleRefreshSynonyms}>\r\n\t\t\t\t\t\t<RefreshIcon className={\"h-4 text-red-500 cursor-pointer\"} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</h4>\r\n\t\t\t<ul>{mappedSynonyms}</ul>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default WordSynonyms;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordCardHeader.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordControls.js",["293"],"import { useState } from \"react\";\r\n\r\n// UI\r\nimport { Button } from \"@material-ui/core\";\r\nimport PopUp from \"../../common-components/ui/PopUp\";\r\n\r\n// Icons\r\nimport { PencilIcon, PhotographIcon, TrashIcon } from \"@heroicons/react/outline\";\r\n\r\n// Contexts\r\nimport { AuthedUser } from \"../../contexts/UserContext\";\r\n\r\n// Components\r\nimport WordForm from \"../../forms/WordForm\";\r\nimport ConfirmPopUp from \"../../common-components/ui/ConfirmPopUp\";\r\nimport IF from \"../../common-components/util/IF\";\r\n\r\nfunction WordControls({ handleRemoveWord, handleShowImage, wordData, id, wordImage }) {\r\n\tconst loggedUser = AuthedUser();\r\n\r\n\t// State vars\r\n\tconst [updateModalOpen, setUpdateModalOpen] = useState(false);\r\n\tconst [confirmDeletePopupOpen, setConfirmDeletePopupOpen] = useState(false);\r\n\r\n\t// handle toggle add word form popup\r\n\tconst handleTogglePopup = () => {\r\n\t\tsetUpdateModalOpen((prev) => !prev);\r\n\t};\r\n\r\n\t// Handle click delete\r\n\tconst handleConfirmDeleteWordOpen = () => {\r\n\t\tsetConfirmDeletePopupOpen((prev) => !prev);\r\n\t};\r\n\r\n\t// Delete dialog function\r\n\tconst deleteDialogFunc = {\r\n\t\tisOpen: confirmDeletePopupOpen,\r\n\t\ttitle: \"Are you sure ?\",\r\n\t\tsubTitle: \"You can't undo this action\",\r\n\t\tonConfirm: handleRemoveWord,\r\n\t};\r\n\r\n\t// update word popup props\r\n\tconst popupProps = {\r\n\t\tinfoFunc: {\r\n\t\t\ttitle: `Update the word ${wordData.word}`,\r\n\t\t\tisOpen: updateModalOpen,\r\n\t\t},\r\n\t\tcloseHandle: handleTogglePopup,\r\n\t\tmaxWidth: \"sm\",\r\n\t\tdividers: true,\r\n\t};\r\n\r\n\t// Button props\r\n\tconst btnProps = (icon, onClickHandler) => ({\r\n\t\tcolor: \"inherit\",\r\n\t\tsize: \"small\",\r\n\t\tonClick: onClickHandler,\r\n\t\tstartIcon: icon,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"mt-2 space-x-3 flex justify-center\">\r\n\t\t\t<IF condition={loggedUser !== \"no user\"}>\r\n\t\t\t\t{/* Delete Word */}\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"order-1\"\r\n\t\t\t\t\t{...btnProps(<TrashIcon className=\"h-5 text-red-500\" />, handleConfirmDeleteWordOpen)}\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t{/* update Word */}\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"order-3\"\r\n\t\t\t\t\t{...btnProps(<TrashIcon className=\"h-5 text-blue-700\" />, handleTogglePopup)}\r\n\t\t\t\t>\r\n\t\t\t\t\tEdit\r\n\t\t\t\t</Button>\r\n\t\t\t</IF>\r\n\r\n\t\t\t{/* Show Word's image */}\r\n\t\t\t<Button\r\n\t\t\t\tclassName=\"order-2\"\r\n\t\t\t\t{...btnProps(<PhotographIcon className=\"h-5 text-green-600\" />, handleShowImage)}\r\n\t\t\t>\r\n\t\t\t\tShow {wordImage !== \"\" ? \"Def\" : \"Image\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t{/* Update word popup */}\r\n\t\t\t<PopUp {...popupProps}>\r\n\t\t\t\t<WordForm\r\n\t\t\t\t\twordDocId={id}\r\n\t\t\t\t\taction=\"update\"\r\n\t\t\t\t\twordData={wordData}\r\n\t\t\t\t\thandleClosePopup={handleTogglePopup}\r\n\t\t\t\t/>\r\n\t\t\t</PopUp>\r\n\r\n\t\t\t{/* Confirm delete popup */}\r\n\t\t\t<ConfirmPopUp dialogFunc={deleteDialogFunc} onClose={handleConfirmDeleteWordOpen} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WordControls;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\word-list\\WordExamples.js",["294"],"import { useState, useEffect } from \"react\";\r\n\r\n// UI\r\nimport { RefreshIcon } from \"@heroicons/react/outline\";\r\nimport { Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\n// Utilities\r\nimport parse from \"html-react-parser\";\r\n\r\nfunction WordExamples({ sentences, word }) {\r\n\t// State vars\r\n\t// for sentences so that i can handle refreshing it\r\n\tconst [sents, setSents] = useState(sentences);\r\n\r\n\t// handle refresh the sentences list\r\n\tconst handleRefreshSentences = () => {\r\n\t\tconst newSentences = sentences.sort(() => Math.random() - 0.5);\r\n\r\n\t\tsetSents([...newSentences]);\r\n\t};\r\n\r\n\t// Set a listener for sents update\r\n\tuseEffect(() => {\r\n\t\t// if sentences get updated then refresh the list\r\n\t\thandleRefreshSentences();\r\n\t}, [sentences]);\r\n\r\n\t// Map through sentences\r\n\tlet mappedSentences = sents.slice(0, 3).map(({ body, id, userProvided }) => {\r\n\t\t// word.slice(0, word.length - 1) to handle the (e) in most of words like accus(e)ing\r\n\t\tconst keywordRegex = new RegExp(`(${word.slice(0, word.length - 1)})\\\\w*`, \"gi\");\r\n\t\tconst ownSensStyle = \"text-red-400\";\r\n\t\treturn (\r\n\t\t\tbody !== \"\" && (\r\n\t\t\t\t<li key={id} className={`mb-2 leading-5 text-sm  ${userProvided && ownSensStyle}`}>\r\n\t\t\t\t\t{parse(body.replace(keywordRegex, `<span class='underline'>$&</span>`))}\r\n\t\t\t\t\t{body.includes(\".\") ? \"\" : \".\"}\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<h4 className=\"mt-3 mb-1 font-semibold flex items-center space-x-1\">\r\n\t\t\t\t<span>Sentences</span>\r\n\t\t\t\t<Tooltip title={\"Refresh Sentences\"} placement=\"right\" arrow={true}>\r\n\t\t\t\t\t<IconButton size=\"small\" onClick={handleRefreshSentences}>\r\n\t\t\t\t\t\t<RefreshIcon className={\"h-4 text-red-500 cursor-pointer\"} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</h4>\r\n\t\t\t<ul>{mappedSentences}</ul>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default WordExamples;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\Controls.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\CustomMenuList.js",["295","296","297","298","299","300"],"import { useEffect, useRef } from \"react\";\r\nimport { MenuList, makeStyles, ClickAwayListener, Paper, Grow, Popper } from \"@material-ui/core\";\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpopper: {\r\n\t\t// top: \"19px !important\",\r\n\t},\r\n}));\r\n\r\nexport default function MenuListCom(props) {\r\n\t// destructuring props\r\n\tconst { anchorEl, handleClose, open, placement = \"top-end\", popperClassName, children } = props;\r\n\tconst classes = useStyles();\r\n\r\n\tconst popperProps = {\r\n\t\topen: open != undefined ? open : Boolean(anchorEl),\r\n\t\tanchorEl: anchorEl,\r\n\t\ttransition: true,\r\n\t\tclassName: `${classes.popper} ${popperClassName}`,\r\n\t\tplacement,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Popper {...popperProps}>\r\n\t\t\t<Grow in={open || Boolean(anchorEl)}>\r\n\t\t\t\t<Paper elevation={3}>{children}</Paper>\r\n\t\t\t</Grow>\r\n\t\t</Popper>\r\n\t);\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\ConfirmPopUp.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\PopUp.js",["301"],"import React from \"react\";\r\n\r\n// material components\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grow, Fade } from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n// icons\r\nimport { XIcon as Close } from \"@heroicons/react/outline\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tdialog: {\r\n\t\tmaxWidth: 750,\r\n\t\tminWidth: 250,\r\n\t},\r\n\tdialogTitle: {\r\n\t\tpadding: \"20px 10px\",\r\n\r\n\t\t\"& h2\": {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tjustifyContent: \"space-between\",\r\n\t\t\talignItems: \"center\",\r\n\t\t},\r\n\t},\r\n\tcloseButton: {\r\n\t\tminWidth: 15,\r\n\t\tpadding: \"1px 4px !important\",\r\n\t},\r\n}));\r\n\r\nexport default function PopUp(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst {\r\n\t\tinfoFunc,\r\n\t\tcloseHandle,\r\n\t\tmaxWidth,\r\n\t\ttransCom = Grow,\r\n\t\tcontentStyles,\r\n\t\tdividers = false,\r\n\t\tchildren,\r\n\t} = props;\r\n\tconst { title, isOpen } = infoFunc;\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={isOpen}\r\n\t\t\tonClose={closeHandle}\r\n\t\t\tfullWidth\r\n\t\t\tmaxWidth={maxWidth}\r\n\t\t\tTransitionComponent={transCom}\r\n\t\t\tclasses={{ paperWidthSm: classes.dialog }}\r\n\t\t>\r\n\t\t\t{title && (\r\n\t\t\t\t<DialogTitle classes={{ root: classes.dialogTitle }}>\r\n\t\t\t\t\t<Typography gutterBottom={false}>{title}</Typography>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.closeButton}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tonClick={closeHandle}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Close className=\"h-5\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t)}\r\n\t\t\t<DialogContent dividers={dividers} className={contentStyles}>\r\n\t\t\t\t{children}\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\hooks\\useForm.js",["302","303","304","305","306"],"import { useState } from \"react\";\r\n\r\nexport function useForm(initialValues, validationOnInput = true, validation) {\r\n\tconst [values, setValues] = useState(initialValues);\r\n\tconst [validationErrors, setErrors] = useState({});\r\n\r\n\t// handle inputs change\r\n\tconst handleInputsChange = (e) => {\r\n\t\tconst { value, name, checked } = e.target;\r\n\r\n\t\tsetValues((prev) => {\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\t[name]:\r\n\t\t\t\t\tname == \"isPermanent\" || name == \"isSeasoned\" || name == \"needMoreInfo\" ? checked : value,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tif (validationOnInput) {\r\n\t\t\tvalidation({ [name]: value }, setErrors);\r\n\t\t}\r\n\t};\r\n\r\n\t// reset form\r\n\tconst resetForm = (values = initialValues) => {\r\n\t\tsetValues(values);\r\n\t\tsetErrors({});\r\n\t};\r\n\r\n\t// input common props\r\n\tconst inputCommonProps = (label, name, value, error) => ({\r\n\t\tlabel,\r\n\t\tinputChange: handleInputsChange,\r\n\t\tvalue: value,\r\n\t\tname,\r\n\t\t...(error != undefined && error != \"\" ? { helperText: error, error: true } : {}),\r\n\t});\r\n\r\n\treturn {\r\n\t\tvalues,\r\n\t\tsetValues,\r\n\t\thandleInputsChange,\r\n\t\tvalidationErrors,\r\n\t\tsetErrors,\r\n\t\tresetForm,\r\n\t\tinputCommonProps,\r\n\t};\r\n}\r\n\r\nexport function Form(props) {\r\n\tconst { children, onSubmit, ...otherAttributes } = props;\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tonSubmit();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} {...otherAttributes}>\r\n\t\t\t{children}\r\n\t\t</form>\r\n\t);\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\form-list\\FormList.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\SelectBoxInput.js",["307"],"// material imports\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n// icons\r\nimport { BadgeCheckIcon } from \"@heroicons/react/solid\";\r\n\r\nexport default function SelectBoxInput(props) {\r\n\tconst { inputChange, validationError, value, items, name, label } = props;\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\t{...(validationError && { error: true, helperText: validationError })}\r\n\t\t\tonChange={inputChange}\r\n\t\t\tname={name}\r\n\t\t\tfullWidth\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tlabel={label}\r\n\t\t\tselect\r\n\t\t\tmargin=\"dense\"\r\n\t\t\tsize=\"small\"\r\n\t\t\tvalue={value}\r\n\t\t>\r\n\t\t\t{items.map((item) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem key={item} value={item} style={{ textTransform: \"capitalize\" }}>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</TextField>\r\n\t);\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\ui\\form-list\\ItemForm.js",["308","309","310","311"],"import { useEffect, useRef, useState } from \"react\";\r\n\r\n// UI\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport Controls from \"../../controls/Controls\";\r\n\r\n// Icons\r\nimport { TrashIcon } from \"@heroicons/react/outline\";\r\n\r\n// Hooks\r\nimport { Form } from \"../../hooks/useForm\";\r\n\r\n// Components\r\nimport SpeechToText from \"../../controls/SpeechToText\";\r\n\r\nfunction ItemForm({ handleUpdate, handleDelete, label, value, lastNewAddedFormId }) {\r\n\tconst formInputRef = useRef();\r\n\r\n\t// State vars\r\n\tconst [inputValue, setInputValue] = useState(value.body);\r\n\r\n\t// Import SpeechToText component to add add the ability to say the items\r\n\tconst { handleStartStopListening, text: result, listeningIcon } = SpeechToText();\r\n\r\n\tuseEffect(() => {\r\n\t\t// Add a condition not to set inputValue on load\r\n\t\tif (result != \"\") {\r\n\t\t\t// update the input value\r\n\t\t\tsetInputValue(result);\r\n\r\n\t\t\t// update it on state\r\n\t\t\thandleUpdate(value.id, result);\r\n\t\t}\r\n\t}, [result]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// handle focus the last added new form's input\r\n\t\tif (lastNewAddedFormId === value.id) {\r\n\t\t\tformInputRef.current.querySelector(\"input\").focus();\r\n\t\t}\r\n\t}, [lastNewAddedFormId]);\r\n\r\n\t// Handle delete the form item\r\n\tconst handleDeleteItem = () => {\r\n\t\t// Stop the mic if is already starting\r\n\t\thandleStartStopListening();\r\n\t\thandleDelete(value.id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form className=\"flex items-center space-x-3\">\r\n\t\t\t<Controls.TextInput\r\n\t\t\t\tinputRef={formInputRef}\r\n\t\t\t\tinputChange={(e) => {\r\n\t\t\t\t\thandleUpdate(value.id, e.target.value);\r\n\t\t\t\t\tsetInputValue(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tlabel={label}\r\n\t\t\t/>\r\n\r\n\t\t\t<div className=\"flex\">\r\n\t\t\t\t{/* button for focus state */}\r\n\t\t\t\t<IconButton onClick={handleStartStopListening} color=\"primary\" size=\"small\">\r\n\t\t\t\t\t{listeningIcon}\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<IconButton onClick={handleDeleteItem} size=\"small\">\r\n\t\t\t\t\t<TrashIcon className=\"h-6 cursor-pointer text-red-600 \" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Form>\r\n\t);\r\n}\r\n\r\nexport default ItemForm;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\SpeechToText.js",["312","313"],"import { useEffect, useState } from \"react\";\r\n\r\n// Icons\r\nimport { MicrophoneIcon, StopIcon } from \"@heroicons/react/outline\";\r\n\r\n// Voice recognition setup\r\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\nconst mic = new speechRecognition();\r\nmic.continuous = true;\r\nmic.interimResults = true;\r\n\r\nfunction SpeechToText() {\r\n\tconst [isListening, setListening] = useState(false);\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [result, setResult] = useState(\"\");\r\n\r\n\tconst handleListen = () => {\r\n\t\tif (isListening) {\r\n\t\t\tmic.start();\r\n\t\t\tmic.onend = () => {\r\n\t\t\t\tmic.start();\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tmic.stop();\r\n\t\t\tmic.onend = () => {\r\n\t\t\t\tsetResult(text);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tmic.onresult = (event) => {\r\n\t\t\tconst transcript = Array.from(event.results)\r\n\t\t\t\t.map((result) => result[0])\r\n\t\t\t\t.map((result) => result.transcript)\r\n\t\t\t\t.join(\"\");\r\n\t\t\tsetText(transcript);\r\n\t\t\tmic.onerror = (event) => {};\r\n\t\t};\r\n\t};\r\n\r\n\tconst handleStartStopListening = () => {\r\n\t\tsetListening((prev) => !prev);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\thandleListen();\r\n\t}, [isListening]);\r\n\r\n\t// listening status icons\r\n\tconst listeningIcon = isListening ? (\r\n\t\t<StopIcon className=\"h-6 text-red-500\" />\r\n\t) : (\r\n\t\t<MicrophoneIcon className=\"h-6 \" />\r\n\t);\r\n\r\n\treturn {\r\n\t\thandleStartStopListening,\r\n\t\ttext,\r\n\t\tisListening,\r\n\t\tlisteningIcon,\r\n\t};\r\n}\r\n\r\nexport default SpeechToText;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\hooks\\useForm.js",["314","315","316","317"],"import React, { useState } from 'react'\r\n\r\n\r\nexport function useForm(initialValues, validationOnInput = true, validation) {\r\n    const [values, setValues] = useState(initialValues)\r\n    const [validationErrors, setErrors] = useState({})\r\n\r\n    // handle inputs change\r\n    const handleInputsChange = (e) => {\r\n        const { value, name, checked } = e.target;\r\n\r\n        setValues((prev) => {\r\n            return {\r\n                ...prev, [name]: name == \"isPermanent\" || name == \"isSeasoned\" ? checked : value\r\n            }\r\n        })\r\n\r\n        if (validationOnInput) {\r\n            validation({ [name]: value }, setErrors)\r\n        }\r\n    }\r\n\r\n    // reset form\r\n    const resetForm = (values = initialValues) => {\r\n        setValues(values)\r\n        setErrors({})\r\n    }\r\n\r\n    // input common props\r\n    const inputCommonProps = (label, name, value, error) => ({\r\n        label,\r\n        onChange: handleInputsChange,\r\n        value: value,\r\n        name,\r\n        ...(error != undefined && error != \"\" ? { helperText: error, error: true } : {})\r\n    })\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        handleInputsChange,\r\n        validationErrors,\r\n        setErrors,\r\n        resetForm,\r\n        inputCommonProps\r\n    }\r\n}\r\n\r\nexport function Form(props) {\r\n    const { children, ...otherAttributes } = props\r\n\r\n    return (\r\n        <form {...otherAttributes}>\r\n            {children}\r\n        </form>\r\n    )\r\n}","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\ReusableCheckBox.js",["318"],"import React from \"react\";\r\n\r\n// material components\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n// icons\r\n// import DoneAll from \"@material-ui/icons/DoneAll\"\r\n\r\nexport default function ReusableCheckBox(props) {\r\n\tconst { onChangeHandle, checkValue, label, name, checkedIcon, normalIcon } = props;\r\n\r\n\treturn (\r\n\t\t<FormGroup>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tonChange={onChangeHandle}\r\n\t\t\t\tchecked={checkValue}\r\n\t\t\t\tlabel={label}\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox color=\"primary\" name={name} /* icon={normalIcon} */ checkedIcon={checkedIcon} />\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</FormGroup>\r\n\t);\r\n}\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\PasswordInput.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\RadioGroup.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\TextArea.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\SearchBox.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\forms\\UserForm.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\hooks\\useWindowWidth.js",["319","320"],"import { useCallback, useEffect, useState } from \"react\";\r\n\r\nfunction useWindowWidth() {\r\n\t// State vars\r\n\tconst [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n\t// Window onResize callback (to stop the event listener on unMount)\r\n\tconst onResize = useCallback(() => {\r\n\t\tsetWindowWidth(window.innerWidth);\r\n\t});\r\n\r\n\t// set a listener to catch window size changing\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"resize\", onResize);\r\n\r\n\t\t// clean up and remove the event listener\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", onResize);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn { windowWidth };\r\n}\r\n\r\nexport default useWindowWidth;\r\n","C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\Toggler.tsx",[],["321","322"],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\TextInput.tsx",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\ScrollTopButton.js",["323","324","325"],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\FilePondCircular.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\common-components\\controls\\FilePondUploader.js",[],"C:\\Users\\Sajed-Hope\\Desktop\\Projects for real\\eng-new\\eng-keep\\src\\components\\AppControls.js",["326","327","328","329","330"],"import { useEffect, useState } from \"react\";\r\n// UI\r\nimport { Fab, makeStyles, Slide } from \"@material-ui/core\";\r\nimport { SpeedDialAction, SpeedDial, SpeedDialIcon } from \"@material-ui/lab\";\r\nimport PopUp from \"../common-components/ui/PopUp\";\r\n\r\n// icons\r\nimport { Add, ArrowUpward, Close, Menu } from \"@material-ui/icons\";\r\n\r\n// info\r\nimport { wordDataInitialValues } from \"../helpers/info\";\r\n\r\n// hooks\r\nimport useAlan from \"../hooks/useAlan\";\r\n\r\n// components\r\nimport WordForm from \"../forms/WordForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tspeedDial: {\r\n\t\tposition: \"fixed\",\r\n\t\tright: 15,\r\n\t\tbottom: 70,\r\n\t},\r\n\taddWordActionFab: {\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\tcolor: theme.palette.common.white,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: theme.palette.secondary.light,\r\n\t\t},\r\n\t},\r\n\tscrollTopActionFab: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tcolor: theme.palette.common.white,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst AppControls = ({ wordListRef }) => {\r\n\tconst classes = useStyles();\r\n\r\n\t// State vars\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [scrollTop, setScrollTop] = useState(false);\r\n\tconst [addWordFormPopupOpen, setPopupOpen] = useState(false);\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\t// inject useAlan\r\n\tconst alanInstance = useAlan(\".alanBtn_wrapper\", open);\r\n\r\n\t// set a listener for the word list scroll-to-top button\r\n\tuseEffect(() => {\r\n\t\twordListRef.current.addEventListener(\"scroll\", (e) => {\r\n\t\t\tconst wordListScrollTop = e.target.scrollTop;\r\n\t\t\tif (wordListScrollTop > 300) {\r\n\t\t\t\tsetScrollTop(true);\r\n\t\t\t} else setScrollTop(false);\r\n\t\t});\r\n\t}, [wordListRef.current]);\r\n\r\n\t// handle scroll top\r\n\tconst handleScrollWayTop = () => {\r\n\t\twordListRef.current.scroll({ top: 0, behavior: \"smooth\" });\r\n\t};\r\n\r\n\t// handle toggle add word form popup\r\n\tconst handleTogglePopup = () => {\r\n\t\tsetPopupOpen((prev) => !prev);\r\n\t};\r\n\r\n\t// popup props\r\n\tconst PopUpProps = {\r\n\t\tinfoFunc: {\r\n\t\t\ttitle: \"Add a new word\",\r\n\t\t\tisOpen: addWordFormPopupOpen,\r\n\t\t},\r\n\t\tcloseHandle: handleTogglePopup,\r\n\t\tmaxWidth: \"sm\",\r\n\t\tdividers: true,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"relative\">\r\n\t\t\t<SpeedDial\r\n\t\t\t\tFabProps={{ size: \"small\" }}\r\n\t\t\t\tariaLabel=\"App Controls Speed Dial\"\r\n\t\t\t\ticon={open ? <Close /> : <Menu />}\r\n\t\t\t\tclassName={classes.speedDial}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\topen={open}\r\n\t\t\t>\r\n\t\t\t\t{/* Add word form's toggler */}\r\n\t\t\t\t<SpeedDialAction\r\n\t\t\t\t\ticon={<Add />}\r\n\t\t\t\t\ttooltipTitle=\"Add Word\"\r\n\t\t\t\t\tclasses={{ fab: classes.addWordActionFab }}\r\n\t\t\t\t\tonClick={handleTogglePopup}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className=\"relative\" style={{ minWidth: 40, minHeight: 40, margin: 8 }}>\r\n\t\t\t\t\t<div className=\"alanBtn_wrapper\"></div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Scroll to top button */}\r\n\t\t\t\t{scrollTop && (\r\n\t\t\t\t\t<SpeedDialAction\r\n\t\t\t\t\t\ticon={<ArrowUpward />}\r\n\t\t\t\t\t\ttooltipTitle=\"Scroll Top\"\r\n\t\t\t\t\t\tclasses={{ fab: classes.scrollTopActionFab }}\r\n\t\t\t\t\t\tonClick={handleScrollWayTop}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</SpeedDial>\r\n\r\n\t\t\t{/* Add word popup */}\r\n\t\t\t<PopUp {...PopUpProps}>\r\n\t\t\t\t<WordForm\r\n\t\t\t\t\taction=\"add\"\r\n\t\t\t\t\twordData={wordDataInitialValues}\r\n\t\t\t\t\thandleClosePopup={handleTogglePopup}\r\n\t\t\t\t/>\r\n\t\t\t</PopUp>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AppControls;\r\n",{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"336","line":2,"column":8,"nodeType":"337","messageId":"338","endLine":2,"endColumn":15},{"ruleId":"335","severity":1,"message":"339","line":46,"column":8,"nodeType":"337","messageId":"338","endLine":46,"endColumn":18},{"ruleId":"340","severity":1,"message":"341","line":36,"column":35,"nodeType":"342","messageId":"343","endLine":36,"endColumn":37},{"ruleId":"335","severity":1,"message":"344","line":21,"column":10,"nodeType":"337","messageId":"338","endLine":21,"endColumn":33},{"ruleId":"335","severity":1,"message":"345","line":24,"column":8,"nodeType":"337","messageId":"338","endLine":24,"endColumn":24},{"ruleId":"346","severity":1,"message":"347","line":41,"column":3,"nodeType":"348","endLine":41,"endColumn":17,"suggestions":"349"},{"ruleId":"346","severity":1,"message":"350","line":62,"column":3,"nodeType":"348","endLine":62,"endColumn":17,"suggestions":"351"},{"ruleId":"346","severity":1,"message":"352","line":100,"column":5,"nodeType":"348","endLine":100,"endColumn":23,"suggestions":"353"},{"ruleId":"340","severity":1,"message":"341","line":99,"column":66,"nodeType":"342","messageId":"343","endLine":99,"endColumn":68},{"ruleId":"346","severity":1,"message":"354","line":146,"column":5,"nodeType":"348","endLine":146,"endColumn":37,"suggestions":"355"},{"ruleId":"346","severity":1,"message":"356","line":168,"column":5,"nodeType":"348","endLine":168,"endColumn":15,"suggestions":"357"},{"ruleId":"335","severity":1,"message":"358","line":4,"column":23,"nodeType":"337","messageId":"338","endLine":4,"endColumn":33},{"ruleId":"359","severity":1,"message":"360","line":62,"column":8,"nodeType":"361","endLine":62,"endColumn":81},{"ruleId":"340","severity":1,"message":"341","line":18,"column":35,"nodeType":"342","messageId":"343","endLine":18,"endColumn":37},{"ruleId":"335","severity":1,"message":"362","line":7,"column":30,"nodeType":"337","messageId":"338","endLine":7,"endColumn":37},{"ruleId":"335","severity":1,"message":"363","line":37,"column":21,"nodeType":"337","messageId":"338","endLine":37,"endColumn":34},{"ruleId":"340","severity":1,"message":"364","line":199,"column":32,"nodeType":"342","messageId":"343","endLine":199,"endColumn":34},{"ruleId":"335","severity":1,"message":"365","line":42,"column":10,"nodeType":"337","messageId":"338","endLine":42,"endColumn":21},{"ruleId":"335","severity":1,"message":"366","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":13},{"ruleId":"335","severity":1,"message":"367","line":15,"column":8,"nodeType":"337","messageId":"338","endLine":15,"endColumn":10},{"ruleId":"335","severity":1,"message":"368","line":29,"column":8,"nodeType":"337","messageId":"338","endLine":29,"endColumn":15},{"ruleId":"335","severity":1,"message":"369","line":52,"column":8,"nodeType":"337","messageId":"338","endLine":52,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":42,"column":27,"nodeType":"372","messageId":"373","endLine":42,"endColumn":28,"suggestions":"374"},{"ruleId":"370","severity":1,"message":"375","line":47,"column":20,"nodeType":"372","messageId":"373","endLine":47,"endColumn":21,"suggestions":"376"},{"ruleId":"370","severity":1,"message":"375","line":47,"column":73,"nodeType":"372","messageId":"373","endLine":47,"endColumn":74,"suggestions":"377"},{"ruleId":"340","severity":1,"message":"341","line":68,"column":23,"nodeType":"342","messageId":"343","endLine":68,"endColumn":25},{"ruleId":"340","severity":1,"message":"341","line":75,"column":54,"nodeType":"342","messageId":"343","endLine":75,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":14,"column":16,"nodeType":"342","messageId":"343","endLine":14,"endColumn":18},{"ruleId":"335","severity":1,"message":"336","line":14,"column":8,"nodeType":"337","messageId":"338","endLine":14,"endColumn":15},{"ruleId":"335","severity":1,"message":"378","line":21,"column":10,"nodeType":"337","messageId":"338","endLine":21,"endColumn":23},{"ruleId":"340","severity":1,"message":"341","line":50,"column":31,"nodeType":"342","messageId":"343","endLine":50,"endColumn":33},{"ruleId":"340","severity":1,"message":"364","line":62,"column":17,"nodeType":"342","messageId":"343","endLine":62,"endColumn":19},{"ruleId":"335","severity":1,"message":"379","line":1,"column":28,"nodeType":"337","messageId":"338","endLine":1,"endColumn":37},{"ruleId":"340","severity":1,"message":"364","line":30,"column":45,"nodeType":"342","messageId":"343","endLine":30,"endColumn":47},{"ruleId":"340","severity":1,"message":"364","line":39,"column":16,"nodeType":"342","messageId":"343","endLine":39,"endColumn":18},{"ruleId":"340","severity":1,"message":"364","line":46,"column":14,"nodeType":"342","messageId":"343","endLine":46,"endColumn":16},{"ruleId":"346","severity":1,"message":"380","line":52,"column":5,"nodeType":"348","endLine":52,"endColumn":20,"suggestions":"381"},{"ruleId":"340","severity":1,"message":"341","line":102,"column":48,"nodeType":"342","messageId":"343","endLine":102,"endColumn":50},{"ruleId":"346","severity":1,"message":"382","line":42,"column":5,"nodeType":"348","endLine":42,"endColumn":15,"suggestions":"383"},{"ruleId":"335","severity":1,"message":"384","line":8,"column":10,"nodeType":"337","messageId":"338","endLine":8,"endColumn":20},{"ruleId":"346","severity":1,"message":"385","line":26,"column":5,"nodeType":"348","endLine":26,"endColumn":16,"suggestions":"386"},{"ruleId":"335","severity":1,"message":"379","line":1,"column":10,"nodeType":"337","messageId":"338","endLine":1,"endColumn":19},{"ruleId":"335","severity":1,"message":"387","line":1,"column":21,"nodeType":"337","messageId":"338","endLine":1,"endColumn":27},{"ruleId":"335","severity":1,"message":"388","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":18},{"ruleId":"335","severity":1,"message":"389","line":2,"column":32,"nodeType":"337","messageId":"338","endLine":2,"endColumn":49},{"ruleId":"335","severity":1,"message":"390","line":13,"column":20,"nodeType":"337","messageId":"338","endLine":13,"endColumn":31},{"ruleId":"340","severity":1,"message":"364","line":17,"column":14,"nodeType":"342","messageId":"343","endLine":17,"endColumn":16},{"ruleId":"335","severity":1,"message":"391","line":9,"column":16,"nodeType":"337","messageId":"338","endLine":9,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":15,"column":11,"nodeType":"342","messageId":"343","endLine":15,"endColumn":13},{"ruleId":"340","severity":1,"message":"341","line":15,"column":36,"nodeType":"342","messageId":"343","endLine":15,"endColumn":38},{"ruleId":"340","severity":1,"message":"341","line":15,"column":60,"nodeType":"342","messageId":"343","endLine":15,"endColumn":62},{"ruleId":"340","severity":1,"message":"364","line":36,"column":13,"nodeType":"342","messageId":"343","endLine":36,"endColumn":15},{"ruleId":"340","severity":1,"message":"364","line":36,"column":35,"nodeType":"342","messageId":"343","endLine":36,"endColumn":37},{"ruleId":"335","severity":1,"message":"392","line":6,"column":10,"nodeType":"337","messageId":"338","endLine":6,"endColumn":24},{"ruleId":"335","severity":1,"message":"393","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":16},{"ruleId":"340","severity":1,"message":"364","line":27,"column":14,"nodeType":"342","messageId":"343","endLine":27,"endColumn":16},{"ruleId":"346","severity":1,"message":"394","line":34,"column":5,"nodeType":"348","endLine":34,"endColumn":13,"suggestions":"395"},{"ruleId":"346","severity":1,"message":"396","line":41,"column":5,"nodeType":"348","endLine":41,"endColumn":25,"suggestions":"397"},{"ruleId":"335","severity":1,"message":"398","line":16,"column":9,"nodeType":"337","messageId":"338","endLine":16,"endColumn":15},{"ruleId":"346","severity":1,"message":"399","line":47,"column":5,"nodeType":"348","endLine":47,"endColumn":18,"suggestions":"400"},{"ruleId":"340","severity":1,"message":"341","line":14,"column":39,"nodeType":"342","messageId":"343","endLine":14,"endColumn":41},{"ruleId":"340","severity":1,"message":"341","line":14,"column":64,"nodeType":"342","messageId":"343","endLine":14,"endColumn":66},{"ruleId":"340","severity":1,"message":"364","line":35,"column":19,"nodeType":"342","messageId":"343","endLine":35,"endColumn":21},{"ruleId":"340","severity":1,"message":"364","line":35,"column":41,"nodeType":"342","messageId":"343","endLine":35,"endColumn":43},{"ruleId":"335","severity":1,"message":"401","line":12,"column":64,"nodeType":"337","messageId":"338","endLine":12,"endColumn":74},{"ruleId":"346","severity":1,"message":"402","line":8,"column":19,"nodeType":"337","endLine":8,"endColumn":30},{"ruleId":"346","severity":1,"message":"403","line":20,"column":5,"nodeType":"348","endLine":20,"endColumn":7,"suggestions":"404"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"366","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":13},{"ruleId":"335","severity":1,"message":"368","line":23,"column":8,"nodeType":"337","messageId":"338","endLine":23,"endColumn":15},{"ruleId":"346","severity":1,"message":"405","line":36,"column":5,"nodeType":"348","endLine":36,"endColumn":26,"suggestions":"406"},{"ruleId":"335","severity":1,"message":"366","line":3,"column":10,"nodeType":"337","messageId":"338","endLine":3,"endColumn":13},{"ruleId":"335","severity":1,"message":"407","line":3,"column":27,"nodeType":"337","messageId":"338","endLine":3,"endColumn":32},{"ruleId":"335","severity":1,"message":"408","line":4,"column":38,"nodeType":"337","messageId":"338","endLine":4,"endColumn":51},{"ruleId":"335","severity":1,"message":"409","line":58,"column":8,"nodeType":"337","messageId":"338","endLine":58,"endColumn":20},{"ruleId":"346","severity":1,"message":"405","line":68,"column":5,"nodeType":"348","endLine":68,"endColumn":26,"suggestions":"410"},"no-native-reassign",["411"],"no-negated-in-lhs",["412"],"no-unused-vars","'useAlan' is defined but never used.","Identifier","unusedVar","'loggedUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleGetWordListByDate' is assigned a value but never used.","'alanBtnContainer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'handleAddWord'. Either include it or remove the dependency array.","ArrayExpression",["413"],"React Hook useCallback has a missing dependency: 'loggedUser.id'. Either include it or remove the dependency array.",["414"],"React Hook useEffect has a missing dependency: 'container'. Either include it or remove the dependency array. If 'setAlanInstance' needs the current value of 'container', you can also switch to useReducer instead of useState and read 'container' in the reducer.",["415"],"React Hook useEffect has missing dependencies: 'handleGetWholeWordList', 'handleGetWordListByDate', 'handleGetWordListOnCategory', 'limit', and 'routerLocation.pathname'. Either include them or remove the dependency array.",["416"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["417"],"'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'storage' is defined but never used.","'setItemsCount' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'windowWidth' is assigned a value but never used.","'Fab' is defined but never used.","'IF' is defined but never used.","'classes' is assigned a value but never used.","'isUserLogged' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["418","419"],"Unnecessary escape character: \\+.",["420","421"],["422","423"],"'createElement' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'isCustomDate'. Either include it or remove the dependency array.",["424"],"React Hook useEffect has a missing dependency: 'handleRefreshSynonyms'. Either include it or remove the dependency array.",["425"],"'PencilIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'handleRefreshSentences'. Either include it or remove the dependency array.",["426"],"'useRef' is defined but never used.","'MenuList' is defined but never used.","'ClickAwayListener' is defined but never used.","'handleClose' is assigned a value but never used.","'Fade' is defined but never used.","'BadgeCheckIcon' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'handleUpdate' and 'value.id'. Either include them or remove the dependency array. If 'handleUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["427"],"React Hook useEffect has a missing dependency: 'value.id'. Either include it or remove the dependency array.",["428"],"'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleListen'. Either include it or remove the dependency array.",["429"],"'normalIcon' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'onResize'. Either include it or remove the dependency array.",["430"],"React Hook useEffect has a missing dependency: 'wordListRef'. Either include it or remove the dependency array. Mutable values like 'wordListRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["431"],"'Slide' is defined but never used.","'SpeedDialIcon' is defined but never used.","'alanInstance' is assigned a value but never used.",["432"],"no-global-assign","no-unsafe-negation",{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"messageId":"443","fix":"444","desc":"445"},{"messageId":"446","fix":"447","desc":"448"},{"messageId":"443","fix":"449","desc":"445"},{"messageId":"446","fix":"450","desc":"448"},{"messageId":"443","fix":"451","desc":"445"},{"messageId":"446","fix":"452","desc":"448"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"467","fix":"469"},"Update the dependencies array to be: [handleAddWord]",{"range":"470","text":"471"},"Update the dependencies array to be: [alanInstance, loggedUser.id]",{"range":"472","text":"473"},"Update the dependencies array to be: [container, loggedUser, open]",{"range":"474","text":"475"},"Update the dependencies array to be: [currentTab, period, loggedUser, routerLocation.pathname, handleGetWordListByDate, limit, handleGetWordListOnCategory, handleGetWholeWordList]",{"range":"476","text":"477"},"Update the dependencies array to be: [query, wordList]",{"range":"478","text":"479"},"removeEscape",{"range":"480","text":"481"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"482","text":"483"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"484","text":"481"},{"range":"485","text":"483"},{"range":"486","text":"481"},{"range":"487","text":"483"},"Update the dependencies array to be: [currentPeriod, isCustomDate]",{"range":"488","text":"489"},"Update the dependencies array to be: [handleRefreshSynonyms, synonyms]",{"range":"490","text":"491"},"Update the dependencies array to be: [handleRefreshSentences, sentences]",{"range":"492","text":"493"},"Update the dependencies array to be: [handleUpdate, result, value.id]",{"range":"494","text":"495"},"Update the dependencies array to be: [lastNewAddedFormId, value.id]",{"range":"496","text":"497"},"Update the dependencies array to be: [handleListen, isListening]",{"range":"498","text":"499"},"Update the dependencies array to be: [onResize]",{"range":"500","text":"501"},"Update the dependencies array to be: [wordListRef]",{"range":"502","text":"503"},{"range":"504","text":"503"},[1083,1097],"[handleAddWord]",[1757,1771],"[alanInstance, loggedUser.id]",[2775,2793],"[container, loggedUser, open]",[4247,4279],"[currentTab, period, loggedUser, routerLocation.pathname, handleGetWordListByDate, limit, handleGetWordListOnCategory, handleGetWholeWordList]",[4890,4900],"[query, wordList]",[1217,1218],"",[1217,1217],"\\",[1510,1511],[1510,1510],[1563,1564],[1563,1563],[1528,1543],"[currentPeriod, isCustomDate]",[1123,1133],"[handleRefreshSynonyms, synonyms]",[732,743],"[handleRefreshSentences, sentences]",[955,963],"[handleUpdate, result, value.id]",[1148,1168],"[lastNewAddedFormId, value.id]",[1082,1095],"[handleListen, isListening]",[577,579],"[onResize]",[826,847],"[wordListRef]",[1745,1766]]